import mods.modularmachinery.RecipeBuilder;
import crafttweaker.formatting.IFormattedText;
import crafttweaker.item.IItemStack;
import crafttweaker.item.IIngredient;
import crafttweaker.data.IData;
import crafttweaker.enchantments.IEnchantment;
import crafttweaker.oredict.IOreDictEntry;
import crafttweaker.oredict.IOreDict;


val moon = RecipeBuilder.newBuilder("moon","rocket_launch_simulation",1);
moon.addEnergyPerTickInput(250000);
moon.addFluidInput(<liquid:fuel>*2500);
moon.addItemInput(<galacticraftcore:rocket_t1>);
moon.addItemOutput(<galacticraftcore:rocket_t1>);
moon.addItemOutput(<galacticraftcore:basic_block_moon>*64);
moon.addItemOutput(<galacticraftcore:basic_block_moon>*64);
moon.addItemOutput(<galacticraftcore:basic_block_moon>*64);
moon.addItemOutput(<galacticraftcore:basic_block_moon>*64);
moon.addItemOutput(<galacticraftcore:basic_block_moon:2>*64);
moon.addItemOutput(<galacticraftcore:basic_block_moon:2>*50);
moon.addItemOutput(<galacticraftcore:meteoric_iron_raw>*64);
moon.addItemOutput(<galacticraftcore:meteoric_iron_raw>*64);
moon.addItemOutput(<galacticraftcore:meteoric_iron_raw>*64);
moon.addItemOutput(<galacticraftcore:item_basic_moon:2>*32);
moon.addItemOutput(<galacticraftcore:item_basic_moon:2>*32);
moon.addItemOutput(<galacticraftcore:item_basic_moon:2>*16);
moon.addItemOutput(<industrialupgrade:heavyore:15>*16);
moon.addItemOutput(<industrialupgrade:baseore:8>*9);
moon.addItemOutput(<thermalfoundation:material:1025>*8);
moon.setChance(0.12);
moon.addItemOutput(<industrialupgrade:baseore:14>*4);
moon.setChance(0.08);
moon.build();

val iceceka = RecipeBuilder.newBuilder("iceceka","rocket_launch_simulation",1);
iceceka.addEnergyPerTickInput(750000);
iceceka.addFluidInput(<liquid:improved_fuel>*1000);
iceceka.addItemInput(<galacticraftplanets:astro_miner>);
iceceka.addItemOutput(<galacticraftplanets:astro_miner>);
iceceka.addItemOutput(<divinerpg:frozen_grass>*64);
iceceka.addItemOutput(<divinerpg:frozen_stone>*64);
iceceka.addItemOutput(<divinerpg:workshop_lamp>*64);
iceceka.addItemOutput(<divinerpg:ice_stone>*43);
iceceka.setChance(0.25);
iceceka.addItemOutput(<divinerpg:ice_shards>*64);
iceceka.setChance(0.5);
iceceka.addItemOutput(<divinerpg:snowflake>*64);
iceceka.addItemOutput(<divinerpg:snowflake>*64);
iceceka.addItemOutput(<divinerpg:snowflake>*64);
iceceka.addItemOutput(<divinerpg:santa_helmet>);
iceceka.setChance(0.0075);
iceceka.addItemOutput(<divinerpg:santa_chestplate>);
iceceka.setChance(0.0075);
iceceka.addItemOutput(<divinerpg:santa_leggings>);
iceceka.setChance(0.0075);
iceceka.addItemOutput(<divinerpg:santa_boots>);
iceceka.setChance(0.0075);
iceceka.build();


val evrore = RecipeBuilder.newBuilder("evrore","rocket_launch_simulation",1);
evrore.addEnergyPerTickInput(500000);
evrore.addFluidInput(<liquid:fuel>*2000);
evrore.addItemInput(<galacticraftplanets:rocket_t2:11>);
evrore.addItemOutput(<galacticraftplanets:rocket_t2:11>);
evrore.addItemOutput(<thaumcraft:ore_amber>*64);
evrore.addItemOutput(<thaumcraft:ore_amber>*64);
evrore.addItemOutput(<thaumcraft:ore_amber>*64);
evrore.addItemOutput(<industrialupgrade:baseore:12>*64);
evrore.addItemOutput(<industrialupgrade:baseore:12>*32);
evrore.addItemOutput(<draconicevolution:draconium_ore>*64);
evrore.addItemOutput(<draconicevolution:draconium_ore>*64);
evrore.addItemOutput(<draconicevolution:draconium_ore>*64);
evrore.setChance(0.5);
evrore.addItemOutput(<bigreactors:oreyellorite>*64);
evrore.addItemOutput(<thermalfoundation:ore_fluid:2>*64);
evrore.addItemOutput(<thermalfoundation:ore_fluid:2>*64);
evrore.addItemOutput(<thermalfoundation:ore_fluid:2>*32);
evrore.setChance(0.5);
evrore.build();

val moonbag = RecipeBuilder.newBuilder("moonbag","rocket_launch_simulation",1);
moonbag.addEnergyPerTickInput(500000);
moonbag.addFluidInput(<liquid:fuel>*1000);
moonbag.addItemInput(<galacticraftcore:buggy>);
moonbag.addItemOutput(<galacticraftcore:buggy>);
moonbag.addItemOutput(<galacticraftcore:basic_block_moon>*64);
moonbag.addItemOutput(<galacticraftcore:basic_block_moon>*64);
moonbag.addItemOutput(<galacticraftcore:basic_block_moon>*18);
moonbag.addItemOutput(<galacticraftcore:basic_block_moon:2>*64);
moonbag.addItemOutput(<galacticraftcore:meteoric_iron_raw>*32);
moonbag.addItemOutput(<galacticraftcore:item_basic_moon:2>*32);
moonbag.addItemOutput(<galacticraftcore:item_basic_moon:2>*32);
moonbag.addItemOutput(<galacticraftcore:item_basic_moon:2>*16);
moonbag.addItemOutput(<thermalfoundation:material:1024>*9);
moonbag.addItemOutput(<thermalfoundation:material:1027>*12);
moonbag.setChance(0.60);
moonbag.addItemOutput(<thermalfoundation:material:1026>*4);
moonbag.setChance(0.54);
moonbag.build();

val mars = RecipeBuilder.newBuilder("mars","rocket_launch_simulation",1);
mars.addEnergyPerTickInput(7500000);
mars.addFluidInput(<liquid:fuel>*3200);
mars.addItemInput(<galacticraftplanets:rocket_t2>);
mars.addItemOutput(<galacticraftplanets:rocket_t2>);
mars.addItemOutput(<galacticraftplanets:mars:2>*64);
mars.addItemOutput(<galacticraftplanets:mars:2>*64);
mars.addItemOutput(<galacticraftplanets:mars:2>*60);
mars.addItemOutput(<galacticraftplanets:mars:2>*60);
mars.addItemOutput(<galacticraftplanets:mars:2>*60);
mars.addItemOutput(<galaxyspace:marsores>*54);
mars.addItemOutput(<thermalfoundation:material:1027>*50);
mars.addItemOutput(<industrialupgrade:heavyore:10>*32);
mars.addItemOutput(<industrialupgrade:heavyore:10>*32);
mars.addItemOutput(<galacticraftplanets:mars:3>*16);
mars.addItemOutput(<galacticraftplanets:mars:3>*16);
mars.addItemOutput(<galacticraftplanets:mars:3>*8);
mars.addItemOutput(<galacticraftplanets:mars:3>*4);
mars.build();

val mercury = RecipeBuilder.newBuilder("mercury","rocket_launch_simulation",1);
mercury.addEnergyPerTickInput(10000000);
mercury.addFluidInput(<liquid:fuel>*5000);
mercury.addItemInput(<galacticraftplanets:rocket_t3>);
mercury.addItemOutput(<galacticraftplanets:rocket_t3>);
mercury.addItemOutput(<galaxyspace:mercuryblocks:5>*64);
mercury.addItemOutput(<galaxyspace:mercuryblocks:5>*64);
mercury.addItemOutput(<galaxyspace:mercuryblocks:5>*64);
mercury.addItemOutput(<galaxyspace:mercuryblocks:5>*64);
mercury.addItemOutput(<galacticraftplanets:asteroids_block:4>*64);
mercury.addItemOutput(<galacticraftplanets:asteroids_block:4>*60);
mercury.addItemOutput(<draconicevolution:draconium_dust>*64);
mercury.addItemOutput(<draconicevolution:draconium_dust>*64);
mercury.addItemOutput(<draconicevolution:draconium_dust>*64);
mercury.addItemOutput(<draconicevolution:draconium_dust>*64);
mercury.addItemOutput(<draconicevolution:draconium_dust>*64);
mercury.addItemOutput(<industrialupgrade:heavyore:9>*56);
mercury.addItemOutput(<industrialupgrade:heavyore:9>*50);
mercury.addItemOutput(<minecraft:nether_star>*10);
mercury.setChance(0.12);
mercury.addItemOutput(<divinerpg:divine_shards>*8);
mercury.setChance(0.08);
mercury.build();

val cerera = RecipeBuilder.newBuilder("cerera","rocket_launch_simulation",1);
cerera.addEnergyPerTickInput(25000000);
cerera.addFluidInput(<liquid:fuel>*10000);
cerera.addItemInput(<galaxyspace:rocket_tier_4>);
cerera.addItemOutput(<galaxyspace:rocket_tier_4>);
cerera.addItemOutput(<galaxyspace:ceresblocks:2>*64);
cerera.addItemOutput(<galaxyspace:ceresblocks:2>*32);
cerera.addItemOutput(<galaxyspace:ceresblocks:3>*32);
cerera.addItemOutput(<galaxyspace:ceresblocks:3>*16);
cerera.addItemOutput(<galaxyspace:ceresblocks:3>*8);
cerera.addItemOutput(<industrialupgrade:radiationresources>*32);
cerera.addItemOutput(<industrialupgrade:heavyore:7>*64);
cerera.addItemOutput(<industrialupgrade:heavyore:8>*64);
cerera.build();

val io = RecipeBuilder.newBuilder("io","rocket_launch_simulation",1);
io.addEnergyPerTickInput(50000000);
io.addFluidInput(<liquid:fuel>*20000);
io.addItemInput(<galaxyspace:rocket_tier_6>);
io.addItemOutput(<galaxyspace:rocket_tier_6>);
io.addItemOutput(<galaxyspace:ioblocks:5>*64);
io.addItemOutput(<galaxyspace:ioblocks:5>*64);
io.addItemOutput(<galaxyspace:ioblocks:5>*32);
io.addItemOutput(<galaxyspace:ioblocks:4>*64);
io.addItemOutput(<galaxyspace:ioblocks:4>*64);
io.addItemOutput(<galaxyspace:ioblocks:4>*64);
io.addItemOutput(<galaxyspace:ioblocks:3>*64);
io.addItemOutput(<galaxyspace:ioblocks:3>*64);
io.addItemOutput(<galaxyspace:ioblocks:3>*64);
io.addItemOutput(<galaxyspace:ioblocks:3>*64);
io.addItemOutput(<galaxyspace:ioblocks:3>*64);
io.addItemOutput(<galaxyspace:ioblocks:3>*64);
io.addItemOutput(<galaxyspace:ioblocks:3>*64);
io.addItemOutput(<galaxyspace:ioblocks:3>*64);
io.addItemOutput(<galaxyspace:ioblocks:3>*64);
io.addItemOutput(<galaxyspace:ioblocks:3>*64);
io.addItemOutput(<industrialupgrade:heavyore:15>*47);
io.addItemOutput(<industrialupgrade:heavyore:7>*36);
io.build();

val finalone = RecipeBuilder.newBuilder("finalone","rocket_launch_simulation",1);
finalone.addEnergyPerTickInput(100000000);
finalone.addFluidInput(<liquid:fuel>*50000);
finalone.addItemInput(<galaxyspace:rocket_tier_5>);
finalone.addItemOutput(<galaxyspace:rocket_tier_5>);
finalone.addItemOutput(<contenttweaker:modularium_ore>*64);
finalone.addItemOutput(<contenttweaker:modularium_ore>*32);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<thermalfoundation:ore:6>*64);
finalone.addItemOutput(<contenttweaker:mithrillium_ore>*47);
finalone.addItemOutput(<contenttweaker:stellar_alloy_ore>*8);
finalone.build();


val newfuel1 = RecipeBuilder.newBuilder("newfuel1","rocket_launch_simulation",1);
newfuel1.addEnergyPerTickInput(370000);
newfuel1.addFluidInput(<liquid:improved_fuel>*2500);
newfuel1.addItemInput(<galacticraftcore:rocket_t1>);
newfuel1.addItemOutput(<galacticraftcore:rocket_t1>);
newfuel1.addItemOutput(<galacticraftcore:basic_block_moon>*64);
newfuel1.addItemOutput(<galacticraftcore:basic_block_moon>*64);
newfuel1.addItemOutput(<galacticraftcore:basic_block_moon:2>*50);
newfuel1.addItemOutput(<galacticraftcore:meteoric_iron_raw>*64);
newfuel1.addItemOutput(<galacticraftcore:meteoric_iron_raw>*64);
newfuel1.addItemOutput(<galacticraftcore:meteoric_iron_raw>*64);
newfuel1.addItemOutput(<galacticraftcore:meteoric_iron_raw>*32);
newfuel1.setChance(0.6);
newfuel1.addItemOutput(<galacticraftcore:meteoric_iron_raw>*32);
newfuel1.setChance(0.50);
newfuel1.addItemOutput(<galacticraftcore:meteoric_iron_raw>*16);
newfuel1.setChance(0.2);
newfuel1.addItemOutput(<industrialupgrade:heavyore:10>*32);
newfuel1.addItemOutput(<industrialupgrade:heavyore:3>*16);
newfuel1.addItemOutput(<industrialupgrade:itemdust:9>*45);
newfuel1.setChance(0.25);
newfuel1.addItemOutput(<industrialupgrade:itemdust:10>*32);
newfuel1.setChance(0.15);
newfuel1.build();


val arcana = RecipeBuilder.newBuilder("arcana","rocket_launch_simulation",1);
arcana.addEnergyPerTickInput(500000);
arcana.addFluidInput(<liquid:fuel>*1000);
arcana.addItemInput(<galacticraftplanets:astro_miner>);
arcana.addItemOutput(<galacticraftplanets:astro_miner>);
arcana.addItemOutput(<divinerpg:arcanium>*64);
arcana.addItemOutput(<divinerpg:arcanium>*64);
arcana.addItemOutput(<divinerpg:arcanium>*64);
arcana.addItemOutput(<divinerpg:raw_arcanium>*32);
arcana.setChance(0.5);
arcana.addItemOutput(<divinerpg:dungeon_tokens>*16);
arcana.build();


val newfuel3 = RecipeBuilder.newBuilder("newfuel3","rocket_launch_simulation",1);
newfuel3.addEnergyPerTickInput(750000);
newfuel3.addFluidInput(<liquid:improved_fuel>*2000);
newfuel3.addItemInput(<galacticraftplanets:rocket_t2:11>);
newfuel3.addItemOutput(<galacticraftplanets:rocket_t2:11>);
newfuel3.addItemOutput(<divinerpg:arlemite_ore>*64);
newfuel3.addItemOutput(<divinerpg:realmite_ore>*64);
newfuel3.addItemOutput(<divinerpg:rupee_ore>*64);
newfuel3.addItemOutput(<thermalfoundation:ore:6>*30);
newfuel3.addItemOutput(<thermalfoundation:ore:5>*32);
newfuel3.addItemOutput(<thermalfoundation:ore:3>*64);
newfuel3.addItemOutput(<thermalfoundation:ore:3>*50);
newfuel3.addItemOutput(<thermalfoundation:ore:3>*43);
newfuel3.setChance(0.5);
newfuel3.addItemOutput(<thermalfoundation:ore_fluid:2>*64);
newfuel3.addItemOutput(<thermalfoundation:ore_fluid:2>*24);
newfuel3.addItemOutput(<thermalfoundation:ore_fluid:2>*12);
newfuel3.addItemOutput(<contenttweaker:modularium_ore>*8);
newfuel3.setChance(0.2);
newfuel3.build();

val newfuel4 = RecipeBuilder.newBuilder("newfuel4","rocket_launch_simulation",1);
newfuel4.addEnergyPerTickInput(500000);
newfuel4.addFluidInput(<liquid:improved_fuel>*1000);
newfuel4.addItemInput(<galacticraftcore:buggy>);
newfuel4.addItemOutput(<galacticraftcore:buggy>);
newfuel4.addItemOutput(<thaumcraft:ore_amber>*64);
newfuel4.addItemOutput(<thaumcraft:ore_amber>*64);
newfuel4.addItemOutput(<thaumcraft:ore_amber>*32);
newfuel4.addItemOutput(<thaumcraft:ore_amber>*18);
newfuel4.setChance(0.60);
newfuel4.addItemOutput(<contenttweaker:thaumium_ore>*64);
newfuel4.addItemOutput(<contenttweaker:thaumium_ore>*32);
newfuel4.addItemOutput(<contenttweaker:void_ore>*12);
newfuel4.setChance(0.50);
newfuel4.addItemOutput(<contenttweaker:void_ore>*12);
newfuel4.setChance(0.25);
newfuel4.build();

val newfuel5 = RecipeBuilder.newBuilder("newfuel5","rocket_launch_simulation",1);
newfuel5.addEnergyPerTickInput(7500000);
newfuel5.addFluidInput(<liquid:improved_fuel>*3200);
newfuel5.addItemInput(<galacticraftplanets:rocket_t2>);
newfuel5.addItemOutput(<galacticraftplanets:rocket_t2>);
newfuel5.addItemOutput(<industrialupgrade:heavyore:6>*64);
newfuel5.addItemOutput(<industrialupgrade:classicore:3>*64);
newfuel5.addItemOutput(<industrialupgrade:classicore:3>*60);
newfuel5.addItemOutput(<industrialupgrade:classicore:3>*60);
newfuel5.addItemOutput(<industrialupgrade:classicore:3>*60);
newfuel5.addItemOutput(<industrialupgrade:blockradiationore:1>*50);
newfuel5.addItemOutput(<industrialupgrade:thorium_ore>*50);
newfuel5.addItemOutput(<industrialupgrade:blockradiationore:2>*50);
newfuel5.addItemOutput(<industrialupgrade:radiationresources:4>*32);
newfuel5.addItemOutput(<industrialupgrade:radiationresources:3>*16);
newfuel5.addItemOutput(<industrialupgrade:radiationresources:6>*16);
newfuel5.addItemOutput(<industrialupgrade:radiationresources:5>*16);
newfuel5.addItemOutput(<bigreactors:oreanglesite>*8);
newfuel5.addItemOutput(<bigreactors:orebenitoite>*8);
newfuel5.addItemOutput(<contenttweaker:ludicrous_ore>*4);
newfuel5.setChance(0.025);
newfuel5.build();

val newfuel6 = RecipeBuilder.newBuilder("newfuel6","rocket_launch_simulation",1);
newfuel6.addEnergyPerTickInput(10000000);
newfuel6.addFluidInput(<liquid:improved_fuel>*5000);
newfuel6.addItemInput(<galacticraftplanets:rocket_t3>);
newfuel6.addItemOutput(<galacticraftplanets:rocket_t3>);
newfuel6.addItemOutput(<galacticraftplanets:asteroids_block:4>*64);
newfuel6.addItemOutput(<galacticraftplanets:asteroids_block:4>*64);
newfuel6.addItemOutput(<draconicevolution:draconium_ore:2>*64);
newfuel6.addItemOutput(<draconicevolution:draconium_ore:2>*64);
newfuel6.addItemOutput(<draconicevolution:draconium_ore:2>*64);
newfuel6.addItemOutput(<draconicevolution:draconium_ore:2>*64);
newfuel6.addItemOutput(<thermalfoundation:material:103>*56);
newfuel6.addItemOutput(<thermalfoundation:material:103>*50);
newfuel6.addItemOutput(<industrialupgrade:baseblockingot1:4>*64);
newfuel6.setChance(0.12);
newfuel6.addItemOutput(<contenttweaker:stellar_alloy_ore>*4);
newfuel6.setChance(0.157);
newfuel6.build();

val newfuel7 = RecipeBuilder.newBuilder("newfuel7","rocket_launch_simulation",1);
newfuel7.addEnergyPerTickInput(25000000);
newfuel7.addFluidInput(<liquid:improved_fuel>*10000);
newfuel7.addItemInput(<galaxyspace:rocket_tier_4>);
newfuel7.addItemOutput(<galaxyspace:rocket_tier_4>);
newfuel7.addItemOutput(<galaxyspace:ceresblocks:2>*64);
newfuel7.addItemOutput(<galaxyspace:ceresblocks:2>*64);
newfuel7.addItemOutput(<thermalfoundation:ore_fluid:3>*32);
newfuel7.addItemOutput(<thermalfoundation:ore_fluid:3>*16);
newfuel7.setChance(0.5);
newfuel7.addItemOutput(<thermalfoundation:ore_fluid:3>*8);
newfuel7.setChance(0.25);
newfuel7.addItemOutput(<thermalfoundation:ore_fluid:4>*32);
newfuel7.addItemOutput(<thermalfoundation:ore_fluid:4>*16);
newfuel7.setChance(0.5);
newfuel7.addItemOutput(<thermalfoundation:ore_fluid:5>*64);
newfuel7.addItemOutput(<contenttweaker:ludicrous_ore>*32);
newfuel7.setChance(0.12);
newfuel7.build();

val newfuel8 = RecipeBuilder.newBuilder("newfuel8","rocket_launch_simulation",1);
newfuel8.addEnergyPerTickInput(50000000);
newfuel8.addFluidInput(<liquid:improved_fuel>*20000);
newfuel8.addItemInput(<galaxyspace:rocket_tier_5>);
newfuel8.addItemOutput(<galaxyspace:rocket_tier_5>);
newfuel8.addItemOutput(<galaxyspace:ioblocks:5>*64);
newfuel8.addItemOutput(<galaxyspace:ioblocks:5>*64);
newfuel8.addItemOutput(<galaxyspace:ioblocks:5>*32);
newfuel8.addItemOutput(<galaxyspace:ioblocks:5>*16);
newfuel8.addItemOutput(<extrautils2:compressednetherrack:3>*64);
newfuel8.addItemOutput(<extrautils2:compressednetherrack:3>*64);
newfuel8.addItemOutput(<railcraft:ore_magic>*64);
newfuel8.addItemOutput(<railcraft:ore_magic>*64);
newfuel8.addItemOutput(<railcraft:ore_magic>*64);
newfuel8.addItemOutput(<railcraft:ore_magic>*64);
newfuel8.addItemOutput(<railcraft:ore_magic>*64);
newfuel8.addItemOutput(<railcraft:ore_magic>*64);
newfuel8.addItemOutput(<railcraft:ore_magic>*64);
newfuel8.addItemOutput(<railcraft:ore_magic>*64);
newfuel8.addItemOutput(<railcraft:ore_magic>*64);
newfuel8.addItemOutput(<railcraft:ore_magic>*64);
newfuel8.build();

val finalone2 = RecipeBuilder.newBuilder("finalone2","rocket_launch_simulation",1);
finalone2.addEnergyPerTickInput(100000000);
finalone2.addFluidInput(<liquid:improved_fuel>*50000);
finalone2.addItemInput(<galaxyspace:rocket_tier_6>);
finalone2.addItemOutput(<galaxyspace:rocket_tier_6>);
finalone2.addItemOutput(<contenttweaker:modularium_ore>*64);
finalone2.addItemOutput(<contenttweaker:modularium_ore>*32);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<industrialupgrade:baseore:14>*64);
finalone2.addItemOutput(<contenttweaker:mithrillium_ore>*64);
finalone2.addItemOutput(<contenttweaker:ludicrous_ore>*32);
finalone2.build();

val cristalfuel = RecipeBuilder.newBuilder("cristalfuel","rocket_launch_simulation",1);
cristalfuel.addEnergyPerTickInput(370000);
cristalfuel.addFluidInput(<liquid:crystal_clear_fuel>*2500);
cristalfuel.addItemInput(<galacticraftcore:rocket_t1>);
cristalfuel.addItemOutput(<galacticraftcore:rocket_t1>);
cristalfuel.addItemOutput(<minecraft:quartz_ore>*64);
cristalfuel.addItemOutput(<minecraft:quartz_ore>*64);
cristalfuel.addItemOutput(<minecraft:quartz_ore>*50);
cristalfuel.setChance(0.5);
cristalfuel.addItemOutput(<draconicevolution:draconium_ore:1>*64);
cristalfuel.addItemOutput(<draconicevolution:draconium_ore:1>*64);
cristalfuel.addItemOutput(<tconstruct:ore>*64);
cristalfuel.addItemOutput(<tconstruct:ore>*64);
cristalfuel.addItemOutput(<tconstruct:ore>*16);
cristalfuel.setChance(0.5);
cristalfuel.addItemOutput(<tconstruct:ore:1>*64);
cristalfuel.addItemOutput(<tconstruct:ore:1>*64);
cristalfuel.addItemOutput(<tconstruct:ore:1>*32);
cristalfuel.setChance(0.5);
cristalfuel.addItemOutput(<divinerpg:bloodgem_ore>*64);
cristalfuel.addItemOutput(<divinerpg:netherite_ore>*64);
cristalfuel.addItemOutput(<thermalfoundation:ore_fluid:3>*64);
cristalfuel.addItemOutput(<thermalfoundation:ore_fluid:3>*64);
cristalfuel.addItemOutput(<thermalfoundation:ore_fluid:3>*64);
cristalfuel.addItemOutput(<railcraft:ore_magic>*64);
cristalfuel.setChance(0.357);
cristalfuel.build();

val endfuel = RecipeBuilder.newBuilder("endfuel","rocket_launch_simulation",1);
endfuel.addEnergyPerTickInput(500000);
endfuel.addFluidInput(<liquid:crystal_clear_fuel>*1000);
endfuel.addItemInput(<galacticraftplanets:astro_miner>);
endfuel.addItemOutput(<galacticraftplanets:astro_miner>);
endfuel.addItemOutput(<minecraft:end_stone>*64);
endfuel.addItemOutput(<minecraft:end_stone>*64);
endfuel.addItemOutput(<minecraft:end_stone>*32);
endfuel.addItemOutput(<draconicevolution:draconium_ore:2>*64);
endfuel.addItemOutput(<draconicevolution:draconium_ore:2>*64);
endfuel.addItemOutput(<draconicevolution:draconium_ore:2>*64);
endfuel.addItemOutput(<draconicevolution:draconium_ore:2>*64);
endfuel.addItemOutput(<draconicevolution:draconium_ore:2>*64);
endfuel.addItemOutput(<draconicevolution:draconium_ore:2>*64);
endfuel.setChance(0.5);
endfuel.addItemOutput(<thermalfoundation:ore_fluid:4>*64);
endfuel.addItemOutput(<thermalfoundation:ore_fluid:4>*16);
endfuel.setChance(0.5);
endfuel.build();

val cristalfuel1 = RecipeBuilder.newBuilder("cristalfuel1","rocket_launch_simulation",1);
cristalfuel1.addEnergyPerTickInput(750000);
cristalfuel1.addFluidInput(<liquid:crystal_clear_fuel>*2000);
cristalfuel1.addItemInput(<galacticraftplanets:rocket_t2:11>);
cristalfuel1.addItemOutput(<galacticraftplanets:rocket_t2:11>);
cristalfuel1.addItemOutput(<industrialupgrade:baseore:7>*64);
cristalfuel1.addItemOutput(<industrialupgrade:baseore:7>*64);
cristalfuel1.addItemOutput(<industrialupgrade:baseore:8>*64);
cristalfuel1.addItemOutput(<industrialupgrade:baseore:8>*30);
cristalfuel1.addItemOutput(<industrialupgrade:baseore:12>*32);
cristalfuel1.addItemOutput(<industrialupgrade:baseore:12>*64);
cristalfuel1.addItemOutput(<industrialupgrade:baseore:13>*50);
cristalfuel1.addItemOutput(<industrialupgrade:baseore:13>*43);
cristalfuel1.setChance(0.5);
cristalfuel1.addItemOutput(<industrialupgrade:baseore:9>*64);
cristalfuel1.addItemOutput(<industrialupgrade:baseore:9>*24);
cristalfuel1.addItemOutput(<industrialupgrade:baseore:14>*12);
cristalfuel1.setChance(0.6);
cristalfuel1.addItemOutput(<contenttweaker:modularium_ore>*28);
cristalfuel1.setChance(0.6);
cristalfuel1.build();

val cristalfuel2 = RecipeBuilder.newBuilder("cristalfuel2","rocket_launch_simulation",1);
cristalfuel2.addEnergyPerTickInput(500000);
cristalfuel2.addFluidInput(<liquid:crystal_clear_fuel>*1000);
cristalfuel2.addItemInput(<galacticraftcore:buggy>);
cristalfuel2.addItemOutput(<galacticraftcore:buggy>);
cristalfuel2.addItemOutput(<contenttweaker:thaumium_ore>*64);
cristalfuel2.addItemOutput(<contenttweaker:thaumium_ore>*64);
cristalfuel2.addItemOutput(<contenttweaker:thaumium_ore>*32);
cristalfuel2.addItemOutput(<contenttweaker:thaumium_ore>*18);
cristalfuel2.setChance(0.60);
cristalfuel2.addItemOutput(<contenttweaker:void_ore>*64);
cristalfuel2.addItemOutput(<contenttweaker:void_ore>*32);
cristalfuel2.addItemOutput(<contenttweaker:mithrillium_ore>*12);
cristalfuel2.setChance(0.50);
cristalfuel2.addItemOutput(<contenttweaker:adaminite_ore>*8);
cristalfuel2.setChance(0.25);
cristalfuel2.addItemOutput(<contenttweaker:mithminite_ore>*2);
cristalfuel2.setChance(0.1);
cristalfuel2.build();

val cristalfuel3 = RecipeBuilder.newBuilder("cristalfuel3","rocket_launch_simulation",1);
cristalfuel3.addEnergyPerTickInput(7500000);
cristalfuel3.addFluidInput(<liquid:crystal_clear_fuel>*3200);
cristalfuel3.addItemInput(<galacticraftplanets:rocket_t2>);
cristalfuel3.addItemOutput(<galacticraftplanets:rocket_t2>);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource>*64);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource>*15);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource:1>*64);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource:1>*64);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource:1>*12);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource:2>*64);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource:2>*20);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource:4>*64);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource:4>*64);
cristalfuel3.setChance(0.7);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource:4>*64);
cristalfuel3.setChance(0.5);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource:4>*64);
cristalfuel3.setChance(0.25);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource:3>*64);
cristalfuel3.addItemOutput(<industrialupgrade:nuclearresource:3>*16);
cristalfuel3.addItemOutput(<industrialupgrade:proton>*25);
cristalfuel3.addItemOutput(<contenttweaker:ludicrous_ore>*32);
cristalfuel3.setChance(0.2575);
cristalfuel3.build();

val cristalfuel4 = RecipeBuilder.newBuilder("cristalfuel4","rocket_launch_simulation",1);
cristalfuel4.addEnergyPerTickInput(10000000);
cristalfuel4.addFluidInput(<liquid:crystal_clear_fuel>*5000);
cristalfuel4.addItemInput(<galacticraftplanets:rocket_t3>);
cristalfuel4.addItemOutput(<galacticraftplanets:rocket_t3>);
cristalfuel4.addItemOutput(<galacticraftplanets:asteroids_block:4>*64);
cristalfuel4.addItemOutput(<galacticraftplanets:asteroids_block:4>*64);
cristalfuel4.addItemOutput(<draconicevolution:draconium_ore:2>*64);
cristalfuel4.addItemOutput(<draconicevolution:draconium_ore:2>*64);
cristalfuel4.addItemOutput(<draconicevolution:draconium_ore:2>*64);
cristalfuel4.addItemOutput(<draconicevolution:draconium_ore:2>*64);
cristalfuel4.addItemOutput(<contenttweaker:stellar_alloy_ore>*24);
cristalfuel4.setChance(0.12);
cristalfuel4.addItemOutput(<contenttweaker:stellar_alloy_ore>*20);
cristalfuel4.setChance(0.12);
cristalfuel4.addItemOutput(<contenttweaker:stellar_alloy_ore>*16);
cristalfuel4.setChance(0.12);
cristalfuel4.addItemOutput(<contenttweaker:stellar_alloy_ore>*4);
cristalfuel4.setChance(0.157);
cristalfuel4.build();

val cristalfuel5 = RecipeBuilder.newBuilder("cristalfuel5","rocket_launch_simulation",1);
cristalfuel5.addEnergyPerTickInput(25000000);
cristalfuel5.addFluidInput(<liquid:crystal_clear_fuel>*10000);
cristalfuel5.addItemInput(<galaxyspace:rocket_tier_4>);
cristalfuel5.addItemOutput(<galaxyspace:rocket_tier_4>);
cristalfuel5.addItemOutput(<galaxyspace:ceresblocks:2>*64);
cristalfuel5.addItemOutput(<galaxyspace:ceresblocks:2>*64);
cristalfuel5.addItemOutput(<industrialupgrade:heavyore:9>*32);
cristalfuel5.addItemOutput(<industrialupgrade:heavyore:9>*32);
cristalfuel5.setChance(0.5);
cristalfuel5.addItemOutput(<industrialupgrade:heavyore:11>*32);
cristalfuel5.setChance(0.25);
cristalfuel5.addItemOutput(<industrialupgrade:heavyore:2>*32);
cristalfuel5.addItemOutput(<industrialupgrade:heavyore:1>*16);
cristalfuel5.setChance(0.5);
cristalfuel5.addItemOutput(<industrialupgrade:heavyore:3>*64);
cristalfuel5.addItemOutput(<contenttweaker:ludicrous_ore>*64);
cristalfuel5.setChance(0.2475);
cristalfuel5.build();

val cristalfuel6 = RecipeBuilder.newBuilder("cristalfuel6","rocket_launch_simulation",1);
cristalfuel6.addEnergyPerTickInput(50000000);
cristalfuel6.addFluidInput(<liquid:crystal_clear_fuel>*20000);
cristalfuel6.addItemInput(<galaxyspace:rocket_tier_5>);
cristalfuel6.addItemOutput(<galaxyspace:rocket_tier_5>);
cristalfuel6.addItemOutput(<divinerpg:eden_ore>*64);
cristalfuel6.addItemOutput(<divinerpg:eden_ore>*64);
cristalfuel6.addItemOutput(<divinerpg:eden_ore>*32);
cristalfuel6.setChance(0.5);
cristalfuel6.addItemOutput(<divinerpg:wildwood_ore>*64);
cristalfuel6.addItemOutput(<divinerpg:wildwood_ore>*64);
cristalfuel6.addItemOutput(<divinerpg:apalachia_ore>*64);
cristalfuel6.addItemOutput(<divinerpg:apalachia_ore>*64);
cristalfuel6.addItemOutput(<divinerpg:skythern_ore>*64);
cristalfuel6.addItemOutput(<divinerpg:skythern_ore>*64);
cristalfuel6.addItemOutput(<divinerpg:skythern_ore>*16);
cristalfuel6.setChance(0.5);
cristalfuel6.addItemOutput(<divinerpg:mortum_ore>*64);
cristalfuel6.addItemOutput(<divinerpg:mortum_ore>*64);
cristalfuel6.addItemOutput(<divinerpg:mortum_ore>*32);
cristalfuel6.setChance(0.5);
cristalfuel6.addItemOutput(<contenttweaker:halite_ore>*50);
cristalfuel6.build();

val cristalfuel7 = RecipeBuilder.newBuilder("cristalfuel7","rocket_launch_simulation",1);
cristalfuel7.addEnergyPerTickInput(100000000);
cristalfuel7.addFluidInput(<liquid:crystal_clear_fuel>*50000);
cristalfuel7.addItemInput(<galaxyspace:rocket_tier_6>);
cristalfuel7.addItemOutput(<galaxyspace:rocket_tier_6>);
cristalfuel7.addItemOutput(<contenttweaker:otherworldly_charging_element>*8);
cristalfuel7.setChance(0.5);
cristalfuel7.addItemOutput(<contenttweaker:parasite>*64);
cristalfuel7.addItemOutput(<contenttweaker:parasite>*32);
cristalfuel7.addItemOutput(<contenttweaker:plasma_cell>*64);
cristalfuel7.addItemOutput(<contenttweaker:plasma_cell>*64);
cristalfuel7.addItemOutput(<contenttweaker:plasma_cell>*64);
cristalfuel7.addItemOutput(<contenttweaker:plasma_cell>*64);
cristalfuel7.addItemOutput(<contenttweaker:plasma_cell>*64);
cristalfuel7.addItemOutput(<contenttweaker:plasma_cell>*64);
cristalfuel7.addItemOutput(<contenttweaker:plasma_cell>*64);
cristalfuel7.addItemOutput(<contenttweaker:plasma_cell>*64);
cristalfuel7.build();

val pulsating_black_hole = RecipeBuilder.newBuilder("pulsating_black_hole","rocket_launch_simulation",1);
pulsating_black_hole.addEnergyPerTickInput(50000000000);
pulsating_black_hole.addFluidInput(<liquid:perfect_fuel>*1000000);
pulsating_black_hole.addItemInput(<galaxyspace:rocket_tier_6:4>);
pulsating_black_hole.addItemOutput(<galaxyspace:rocket_tier_6:4>);
pulsating_black_hole.addItemInput(<projecte:fuel_block:2>* 64);
pulsating_black_hole.addItemOutput(<contenttweaker:pulsating_black_hole>);
pulsating_black_hole.setChance(0.01);
pulsating_black_hole.build();

