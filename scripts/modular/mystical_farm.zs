import mods.modularmachinery.RecipeModifierBuilder;



val crop1 = mods.modularmachinery.RecipeBuilder.newBuilder("crop1", "mystical_farm", 10000);
crop1.addEnergyPerTickInput(100);
crop1.addFluidInput(<liquid:water>*500);
crop1.addItemInput(<mysticalagriculture:silicon_seeds>);
crop1.addItemOutput(<mysticalagriculture:silicon_seeds>);
crop1.addItemOutput(<mysticalagriculture:silicon_essence>*4);
crop1.addItemOutput(<mysticalagriculture:silicon_essence>);
crop1.setChance(0.50);
crop1.addItemOutput(<mysticalagriculture:silicon_essence>);
crop1.setChance(0.26);
crop1.addItemOutput(<mysticalagriculture:silicon_seeds>);
crop1.setChance(0.50);
crop1.build();

val crop2 = mods.modularmachinery.RecipeBuilder.newBuilder("crop2", "mystical_farm", 10000);
crop2.addEnergyPerTickInput(100);
crop2.addFluidInput(<liquid:water>*500);
crop2.addItemInput(<mysticalagriculture:iron_seeds>);
crop2.addItemOutput(<mysticalagriculture:iron_seeds>);
crop2.addItemOutput(<mysticalagriculture:iron_essence>*4);
crop2.addItemOutput(<mysticalagriculture:iron_essence>);
crop2.setChance(0.50);
crop2.addItemOutput(<mysticalagriculture:iron_essence>);
crop2.setChance(0.26);
crop2.addItemOutput(<mysticalagriculture:iron_seeds>);
crop2.setChance(0.50);
crop2.build();

val crop3 = mods.modularmachinery.RecipeBuilder.newBuilder("crop3", "mystical_farm", 10000);
crop3.addEnergyPerTickInput(100);
crop3.addFluidInput(<liquid:water>*500);
crop3.addItemInput(<mysticalagriculture:nether_quartz_seeds>);
crop3.addItemOutput(<mysticalagriculture:nether_quartz_seeds>);
crop3.addItemOutput(<mysticalagriculture:nether_quartz_essence>*4);
crop3.addItemOutput(<mysticalagriculture:nether_quartz_essence>);
crop3.setChance(0.50);
crop3.addItemOutput(<mysticalagriculture:nether_quartz_essence>);
crop3.setChance(0.26);
crop3.addItemOutput(<mysticalagriculture:nether_quartz_seeds>);
crop3.setChance(0.50);
crop3.build();

val crop4 = mods.modularmachinery.RecipeBuilder.newBuilder("crop4", "mystical_farm", 10000);
crop4.addEnergyPerTickInput(100);
crop4.addFluidInput(<liquid:water>*500);
crop4.addItemInput(<mysticalagriculture:glowstone_seeds>);
crop4.addItemOutput(<mysticalagriculture:glowstone_seeds>);
crop4.addItemOutput(<mysticalagriculture:glowstone_essence>*4);
crop4.addItemOutput(<mysticalagriculture:glowstone_essence>);
crop4.setChance(0.50);
crop4.addItemOutput(<mysticalagriculture:glowstone_essence>);
crop4.setChance(0.26);
crop4.addItemOutput(<mysticalagriculture:glowstone_seeds>);
crop4.setChance(0.50);
crop4.build();

val crop5 = mods.modularmachinery.RecipeBuilder.newBuilder("crop5", "mystical_farm", 10000);
crop5.addEnergyPerTickInput(100);
crop5.addFluidInput(<liquid:water>*500);
crop5.addItemInput(<mysticalagriculture:redstone_seeds>);
crop5.addItemOutput(<mysticalagriculture:redstone_seeds>);
crop5.addItemOutput(<mysticalagriculture:redstone_essence>*4);
crop5.addItemOutput(<mysticalagriculture:redstone_essence>);
crop5.setChance(0.50);
crop5.addItemOutput(<mysticalagriculture:redstone_essence>);
crop5.setChance(0.26);
crop5.addItemOutput(<mysticalagriculture:redstone_seeds>);
crop5.setChance(0.50);
crop5.build();

val crop6 = mods.modularmachinery.RecipeBuilder.newBuilder("crop6", "mystical_farm", 10000);
crop6.addEnergyPerTickInput(100);
crop6.addFluidInput(<liquid:water>*500);
crop6.addItemInput(<mysticalagriculture:lapis_lazuli_seeds>);
crop6.addItemOutput(<mysticalagriculture:lapis_lazuli_seeds>);
crop6.addItemOutput(<mysticalagriculture:lapis_lazuli_essence>*4);
crop6.addItemOutput(<mysticalagriculture:lapis_lazuli_essence>);
crop6.setChance(0.50);
crop6.addItemOutput(<mysticalagriculture:lapis_lazuli_essence>);
crop6.setChance(0.26);
crop6.addItemOutput(<mysticalagriculture:lapis_lazuli_seeds>);
crop6.setChance(0.50);
crop6.build();

val crop7 = mods.modularmachinery.RecipeBuilder.newBuilder("crop7", "mystical_farm", 10000);
crop7.addEnergyPerTickInput(100);
crop7.addFluidInput(<liquid:water>*500);
crop7.addItemInput(<mysticalagriculture:aluminum_seeds>);
crop7.addItemOutput(<mysticalagriculture:aluminum_seeds>);
crop7.addItemOutput(<mysticalagriculture:aluminum_essence>*4);
crop7.addItemOutput(<mysticalagriculture:aluminum_essence>);
crop7.setChance(0.50);
crop7.addItemOutput(<mysticalagriculture:aluminum_essence>);
crop7.setChance(0.26);
crop7.addItemOutput(<mysticalagriculture:aluminum_seeds>);
crop7.setChance(0.50);
crop7.build();

val crop8 = mods.modularmachinery.RecipeBuilder.newBuilder("crop8", "mystical_farm", 10000);
crop8.addEnergyPerTickInput(100);
crop8.addFluidInput(<liquid:water>*500);
crop8.addItemInput(<mysticalagriculture:lead_seeds>);
crop8.addItemOutput(<mysticalagriculture:lead_seeds>);
crop8.addItemOutput(<mysticalagriculture:lead_essence>*4);
crop8.addItemOutput(<mysticalagriculture:lead_essence>);
crop8.setChance(0.50);
crop8.addItemOutput(<mysticalagriculture:lead_essence>);
crop8.setChance(0.26);
crop8.addItemOutput(<mysticalagriculture:lead_seeds>);
crop8.setChance(0.50);
crop8.build();

val crop9 = mods.modularmachinery.RecipeBuilder.newBuilder("crop9", "mystical_farm", 10000);
crop9.addEnergyPerTickInput(100);
crop9.addFluidInput(<liquid:water>*500);
crop9.addItemInput(<mysticalagriculture:copper_seeds>);
crop9.addItemOutput(<mysticalagriculture:copper_seeds>);
crop9.addItemOutput(<mysticalagriculture:copper_essence>*4);
crop9.addItemOutput(<mysticalagriculture:copper_essence>);
crop9.setChance(0.50);
crop9.addItemOutput(<mysticalagriculture:copper_essence>);
crop9.setChance(0.26);
crop9.addItemOutput(<mysticalagriculture:copper_seeds>);
crop9.setChance(0.50);
crop9.build();

val crop10 = mods.modularmachinery.RecipeBuilder.newBuilder("crop10", "mystical_farm", 10000);
crop10.addEnergyPerTickInput(100);
crop10.addFluidInput(<liquid:water>*500);
crop10.addItemInput(<mysticalagriculture:tin_seeds>);
crop10.addItemOutput(<mysticalagriculture:tin_seeds>);
crop10.addItemOutput(<mysticalagriculture:tin_essence>*4);
crop10.addItemOutput(<mysticalagriculture:tin_essence>);
crop10.setChance(0.50);
crop10.addItemOutput(<mysticalagriculture:tin_essence>);
crop10.setChance(0.26);
crop10.addItemOutput(<mysticalagriculture:tin_seeds>);
crop10.setChance(0.50);
crop10.build();

val crop11 = mods.modularmachinery.RecipeBuilder.newBuilder("crop11", "mystical_farm", 10000);
crop11.addEnergyPerTickInput(100);
crop11.addFluidInput(<liquid:water>*500);
crop11.addItemInput(<mysticalagriculture:bronze_seeds>);
crop11.addItemOutput(<mysticalagriculture:bronze_seeds>);
crop11.addItemOutput(<mysticalagriculture:bronze_essence>*4);
crop11.addItemOutput(<mysticalagriculture:bronze_essence>);
crop11.setChance(0.50);
crop11.addItemOutput(<mysticalagriculture:bronze_essence>);
crop11.setChance(0.26);
crop11.addItemOutput(<mysticalagriculture:bronze_seeds>);
crop11.setChance(0.50);
crop11.build();

val crop12 = mods.modularmachinery.RecipeBuilder.newBuilder("crop12", "mystical_farm", 10000);
crop12.addEnergyPerTickInput(100);
crop12.addFluidInput(<liquid:water>*500);
crop12.addItemInput(<mysticalagriculture:zinc_seeds>);
crop12.addItemOutput(<mysticalagriculture:zinc_seeds>);
crop12.addItemOutput(<mysticalagriculture:zinc_seeds>);
crop12.addItemOutput(<mysticalagriculture:zinc_essence>*4);
crop12.addItemOutput(<mysticalagriculture:zinc_essence>);
crop12.setChance(0.50);
crop12.addItemOutput(<mysticalagriculture:zinc_essence>);
crop12.setChance(0.26);
crop12.addItemOutput(<mysticalagriculture:zinc_seeds>);
crop12.setChance(0.50);
crop12.build();

val crop13 = mods.modularmachinery.RecipeBuilder.newBuilder("crop13", "mystical_farm", 10000);
crop13.addEnergyPerTickInput(100);
crop13.addFluidInput(<liquid:water>*500);
crop13.addItemInput(<mysticalagriculture:brass_seeds>);
crop13.addItemOutput(<mysticalagriculture:brass_seeds>);
crop13.addItemOutput(<mysticalagriculture:brass_essence>*4);
crop13.addItemOutput(<mysticalagriculture:brass_essence>);
crop13.setChance(0.50);
crop13.addItemOutput(<mysticalagriculture:brass_essence>);
crop13.setChance(0.26);
crop13.addItemOutput(<mysticalagriculture:brass_seeds>);
crop13.setChance(0.50);
crop13.build();

val crop14 = mods.modularmachinery.RecipeBuilder.newBuilder("crop14", "mystical_farm", 10000);
crop14.addEnergyPerTickInput(100);
crop14.addFluidInput(<liquid:water>*500);
crop14.addItemInput(<mysticalagriculture:silver_seeds>);
crop14.addItemOutput(<mysticalagriculture:silver_seeds>);
crop14.addItemOutput(<mysticalagriculture:silver_essence>*4);
crop14.addItemOutput(<mysticalagriculture:silver_essence>);
crop14.setChance(0.50);
crop14.addItemOutput(<mysticalagriculture:silver_essence>);
crop14.setChance(0.26);
crop14.addItemOutput(<mysticalagriculture:silver_seeds>);
crop14.setChance(0.50);
crop14.build();

val crop15 = mods.modularmachinery.RecipeBuilder.newBuilder("crop15", "mystical_farm", 10000);
crop15.addEnergyPerTickInput(100);
crop15.addFluidInput(<liquid:water>*500);
crop15.addItemInput(<mysticalagriculture:invar_seeds>);
crop15.addItemOutput(<mysticalagriculture:invar_seeds>);
crop15.addItemOutput(<mysticalagriculture:invar_essence>*4);
crop15.addItemOutput(<mysticalagriculture:invar_essence>);
crop15.setChance(0.50);
crop15.addItemOutput(<mysticalagriculture:invar_essence>);
crop15.setChance(0.26);
crop15.addItemOutput(<mysticalagriculture:invar_seeds>);
crop15.setChance(0.50);
crop15.build();

val crop16 = mods.modularmachinery.RecipeBuilder.newBuilder("crop16", "mystical_farm", 10000);
crop16.addEnergyPerTickInput(100);
crop16.addFluidInput(<liquid:water>*500);
crop16.addItemInput(<mysticalagriculture:steel_seeds>);
crop16.addItemOutput(<mysticalagriculture:steel_seeds>);
crop16.addItemOutput(<mysticalagriculture:steel_essence>*4);
crop16.addItemOutput(<mysticalagriculture:steel_essence>);
crop16.setChance(0.50);
crop16.addItemOutput(<mysticalagriculture:steel_essence>);
crop16.setChance(0.26);
crop16.addItemOutput(<mysticalagriculture:steel_seeds>);
crop16.setChance(0.50);
crop16.build();

val crop17 = mods.modularmachinery.RecipeBuilder.newBuilder("crop17", "mystical_farm", 10000);
crop17.addEnergyPerTickInput(100);
crop17.addFluidInput(<liquid:water>*500);
crop17.addItemInput(<mysticalagriculture:nickel_seeds>);
crop17.addItemOutput(<mysticalagriculture:nickel_seeds>);
crop17.addItemOutput(<mysticalagriculture:nickel_essence>*4);
crop17.addItemOutput(<mysticalagriculture:nickel_essence>);
crop17.setChance(0.50);
crop17.addItemOutput(<mysticalagriculture:nickel_essence>);
crop17.setChance(0.26);
crop17.addItemOutput(<mysticalagriculture:nickel_seeds>);
crop17.setChance(0.50);
crop17.build();

val crop18 = mods.modularmachinery.RecipeBuilder.newBuilder("crop18", "mystical_farm", 10000);
crop18.addEnergyPerTickInput(100);
crop18.addFluidInput(<liquid:water>*500);
crop18.addItemInput(<mysticalagriculture:electrum_seeds>);
crop18.addItemOutput(<mysticalagriculture:electrum_seeds>);
crop18.addItemOutput(<mysticalagriculture:electrum_essence>*4);
crop18.addItemOutput(<mysticalagriculture:electrum_essence>);
crop18.setChance(0.50);
crop18.addItemOutput(<mysticalagriculture:electrum_essence>);
crop18.setChance(0.26);
crop18.addItemOutput(<mysticalagriculture:electrum_seeds>);
crop18.setChance(0.50);
crop18.build();

val crop20 = mods.modularmachinery.RecipeBuilder.newBuilder("crop20", "mystical_farm", 10000);
crop20.addEnergyPerTickInput(100);
crop20.addFluidInput(<liquid:water>*500);
crop20.addItemInput(<mysticalagriculture:tungsten_seeds>);
crop20.addItemOutput(<mysticalagriculture:tungsten_seeds>);
crop20.addItemOutput(<mysticalagriculture:tungsten_essence>*4);
crop20.addItemOutput(<mysticalagriculture:tungsten_essence>);
crop20.setChance(0.50);
crop20.addItemOutput(<mysticalagriculture:tungsten_essence>);
crop20.setChance(0.26);
crop20.addItemOutput(<mysticalagriculture:tungsten_seeds>);
crop20.setChance(0.50);
crop20.build();

val crop21 = mods.modularmachinery.RecipeBuilder.newBuilder("crop21", "mystical_farm", 10000);
crop21.addEnergyPerTickInput(100);
crop21.addFluidInput(<liquid:water>*500);
crop21.addItemInput(<mysticalagriculture:titanium_seeds>);
crop21.addItemOutput(<mysticalagriculture:titanium_seeds>);
crop21.addItemOutput(<mysticalagriculture:titanium_essence>*4);
crop21.addItemOutput(<mysticalagriculture:titanium_essence>);
crop21.setChance(0.50);
crop21.addItemOutput(<mysticalagriculture:titanium_essence>);
crop21.setChance(0.26);
crop21.addItemOutput(<mysticalagriculture:titanium_seeds>);
crop21.setChance(0.50);
crop21.build();

val crop22 = mods.modularmachinery.RecipeBuilder.newBuilder("crop22", "mystical_farm", 10000);
crop22.addEnergyPerTickInput(100);
crop22.addFluidInput(<liquid:water>*500);
crop22.addItemInput(<mysticalagriculture:uranium_seeds>);
crop22.addItemOutput(<mysticalagriculture:uranium_seeds>);
crop22.addItemOutput(<mysticalagriculture:uranium_essence>*4);
crop22.addItemOutput(<mysticalagriculture:uranium_essence>);
crop22.setChance(0.50);
crop22.addItemOutput(<mysticalagriculture:uranium_essence>);
crop22.setChance(0.26);
crop22.addItemOutput(<mysticalagriculture:uranium_seeds>);
crop22.setChance(0.50);
crop22.build();

val crop24 = mods.modularmachinery.RecipeBuilder.newBuilder("crop24", "mystical_farm", 10000);
crop24.addEnergyPerTickInput(100);
crop24.addFluidInput(<liquid:water>*500);
crop24.addItemInput(<mysticalagriculture:platinum_seeds>);
crop24.addItemOutput(<mysticalagriculture:platinum_seeds>);
crop24.addItemOutput(<mysticalagriculture:platinum_essence>*4);
crop24.addItemOutput(<mysticalagriculture:platinum_essence>);
crop24.setChance(0.50);
crop24.addItemOutput(<mysticalagriculture:platinum_essence>);
crop24.setChance(0.26);
crop24.addItemOutput(<mysticalagriculture:platinum_seeds>);
crop24.setChance(0.50);
crop24.build();

val crop26 = mods.modularmachinery.RecipeBuilder.newBuilder("crop26", "mystical_farm", 10000);
crop26.addEnergyPerTickInput(100);
crop26.addFluidInput(<liquid:water>*500);
crop26.addItemInput(<mysticalagriculture:enderium_seeds>);
crop26.addItemOutput(<mysticalagriculture:enderium_seeds>);
crop26.addItemOutput(<mysticalagriculture:enderium_essence>*4);
crop26.addItemOutput(<mysticalagriculture:enderium_essence>);
crop26.setChance(0.50);
crop26.addItemOutput(<mysticalagriculture:enderium_essence>);
crop26.setChance(0.26);
crop26.addItemOutput(<mysticalagriculture:enderium_seeds>);
crop26.setChance(0.50);
crop26.build();

val crop27 = mods.modularmachinery.RecipeBuilder.newBuilder("crop27", "mystical_farm", 10000);
crop27.addEnergyPerTickInput(100);
crop27.addFluidInput(<liquid:water>*500);
crop27.addItemInput(<mysticalagriculture:end_steel_seeds>);
crop27.addItemOutput(<mysticalagriculture:end_steel_seeds>);
crop27.addItemOutput(<mysticalagriculture:end_steel_essence>*4);
crop27.addItemOutput(<mysticalagriculture:end_steel_essence>);
crop27.setChance(0.50);
crop27.addItemOutput(<mysticalagriculture:end_steel_essence>);
crop27.setChance(0.26);
crop27.addItemOutput(<mysticalagriculture:end_steel_seeds>);
crop27.setChance(0.50);
crop27.build();

val crop31 = mods.modularmachinery.RecipeBuilder.newBuilder("crop31", "mystical_farm", 10000);
crop31.addEnergyPerTickInput(100);
crop31.addFluidInput(<liquid:water>*500);
crop31.addItemInput(<mysticalagriculture:thaumium_seeds>);
crop31.addItemOutput(<mysticalagriculture:thaumium_seeds>);
crop31.addItemOutput(<mysticalagriculture:thaumium_essence>*4);
crop31.addItemOutput(<mysticalagriculture:thaumium_essence>);
crop31.setChance(0.50);
crop31.addItemOutput(<mysticalagriculture:thaumium_essence>);
crop31.setChance(0.26);
crop31.addItemOutput(<mysticalagriculture:thaumium_seeds>);
crop31.setChance(0.50);
crop31.build();

val crop36 = mods.modularmachinery.RecipeBuilder.newBuilder("crop36", "mystical_farm", 10000);
crop36.addEnergyPerTickInput(100);
crop36.addFluidInput(<liquid:water>*500);
crop36.addItemInput(<mysticalagriculture:void_metal_seeds>);
crop36.addItemOutput(<mysticalagriculture:void_metal_seeds>);
crop36.addItemOutput(<mysticalagriculture:void_metal_essence>*4);
crop36.addItemOutput(<mysticalagriculture:void_metal_essence>);
crop36.setChance(0.50);
crop36.addItemOutput(<mysticalagriculture:void_metal_essence>);
crop36.setChance(0.26);
crop36.addItemOutput(<mysticalagriculture:void_metal_seeds>);
crop36.setChance(0.50);
crop36.build();

val crop37 = mods.modularmachinery.RecipeBuilder.newBuilder("crop37", "mystical_farm", 10000);
crop37.addEnergyPerTickInput(100);
crop37.addFluidInput(<liquid:water>*500);
crop37.addItemInput(<mysticalagriculture:draconium_seeds>);
crop37.addItemOutput(<mysticalagriculture:draconium_seeds>);
crop37.addItemOutput(<mysticalagriculture:draconium_essence>*4);
crop37.addItemOutput(<mysticalagriculture:draconium_essence>);
crop37.setChance(0.50);
crop37.addItemOutput(<mysticalagriculture:draconium_essence>);
crop37.setChance(0.26);
crop37.addItemOutput(<mysticalagriculture:draconium_seeds>);
crop37.setChance(0.50);
crop37.build();

val crop38 = mods.modularmachinery.RecipeBuilder.newBuilder("crop38", "mystical_farm", 10000);
crop38.addEnergyPerTickInput(100);
crop38.addFluidInput(<liquid:water>*500);
crop38.addCatalystInput(
       <mysticalagradditions:special:4>,
        ["Необходим для работы с семенами 6 уровня",],
        [RecipeModifierBuilder.create(  "modularmachinery:energy", "input",        0.5,   1, false).build(),]
    ).setChance(0.0);
crop38.addItemInput(<mysticalagradditions:awakened_draconium_seeds>);
crop38.addItemOutput(<mysticalagradditions:awakened_draconium_seeds>);
crop38.addItemOutput(<mysticalagradditions:awakened_draconium_essence>*4);
crop38.addItemOutput(<mysticalagradditions:awakened_draconium_essence>);
crop38.setChance(0.50);
crop38.addItemOutput(<mysticalagradditions:awakened_draconium_essence>);
crop38.setChance(0.26);
crop38.addItemOutput(<mysticalagradditions:awakened_draconium_seeds>);
crop38.setChance(0.50);
crop38.build();

val crop39 = mods.modularmachinery.RecipeBuilder.newBuilder("crop39", "mystical_farm", 10000);
crop39.addEnergyPerTickInput(100);
crop39.addFluidInput(<liquid:water>*500);
crop39.addCatalystInput(
       <mysticalagradditions:special>,
        ["Необходим для работы с семенами 6 уровня",],
        [RecipeModifierBuilder.create(  "modularmachinery:energy", "input",        0.5,   1, false).build(),]
    ).setChance(0.0);
crop39.addItemInput(<mysticalagradditions:nether_star_seeds>);
crop39.addItemOutput(<mysticalagradditions:nether_star_seeds>);
crop39.addItemOutput(<mysticalagradditions:nether_star_essence>*4);
crop39.addItemOutput(<mysticalagradditions:nether_star_essence>);
crop39.setChance(0.50);
crop39.addItemOutput(<mysticalagradditions:nether_star_essence>);
crop39.setChance(0.26);
crop39.addItemOutput(<mysticalagradditions:nether_star_seeds>);
crop39.setChance(0.50);
crop39.build();

val crop40 = mods.modularmachinery.RecipeBuilder.newBuilder("crop40", "mystical_farm", 10000);
crop40.addEnergyPerTickInput(100);
crop40.addFluidInput(<liquid:water>*500);
crop40.addCatalystInput(
       <mysticalagradditions:special:1>,
        ["Необходим для работы с семенами 6 уровня",],
        [RecipeModifierBuilder.create(  "modularmachinery:energy", "input",        0.5,   1, false).build(),]
    ).setChance(0.0);
crop40.addItemInput(<mysticalagradditions:dragon_egg_seeds>);
crop40.addItemOutput(<mysticalagradditions:dragon_egg_seeds>);
crop40.addItemOutput(<mysticalagradditions:dragon_egg_essence>*4);
crop40.addItemOutput(<mysticalagradditions:dragon_egg_essence>);
crop40.setChance(0.50);
crop40.addItemOutput(<mysticalagradditions:dragon_egg_essence>);
crop40.setChance(0.26);
crop40.addItemOutput(<mysticalagradditions:dragon_egg_seeds>);
crop40.setChance(0.50);
crop40.build();

val crop41 = mods.modularmachinery.RecipeBuilder.newBuilder("crop41", "mystical_farm", 10000);
crop41.addEnergyPerTickInput(100);
crop41.addFluidInput(<liquid:water>*500);
crop41.addCatalystInput(
       <mysticalagradditions:special:5>,
        ["Необходим для работы с семенами 6 уровня",],
        [RecipeModifierBuilder.create(  "modularmachinery:energy", "input",        0.5,   1, false).build(),]
    ).setChance(0.0);
crop41.addItemInput(<mysticalagradditions:neutronium_seeds>);
crop41.addItemOutput(<mysticalagradditions:neutronium_seeds>);
crop41.addItemOutput(<mysticalagradditions:neutronium_essence>*4);
crop41.addItemOutput(<mysticalagradditions:neutronium_essence>);
crop41.setChance(0.50);
crop41.addItemOutput(<mysticalagradditions:neutronium_essence>);
crop41.setChance(0.26);
crop41.addItemOutput(<mysticalagradditions:neutronium_seeds>);
crop41.setChance(0.50);
crop41.build();

val crop42 = mods.modularmachinery.RecipeBuilder.newBuilder("crop42", "mystical_farm", 10000);
crop42.addEnergyPerTickInput(100);
crop42.addFluidInput(<liquid:water>*500);
crop42.addItemInput(<mysticalagriculture:certus_quartz_seeds>);
crop42.addItemOutput(<mysticalagriculture:certus_quartz_seeds>);
crop42.addItemOutput(<mysticalagriculture:certus_quartz_essence>*4);
crop42.addItemOutput(<mysticalagriculture:certus_quartz_essence>);
crop42.setChance(0.50);
crop42.addItemOutput(<mysticalagriculture:certus_quartz_essence>);
crop42.setChance(0.26);
crop42.addItemOutput(<mysticalagriculture:certus_quartz_seeds>);
crop42.setChance(0.50);
crop42.build();

val crop43 = mods.modularmachinery.RecipeBuilder.newBuilder("crop43", "mystical_farm", 10000);
crop43.addEnergyPerTickInput(100);
crop43.addFluidInput(<liquid:water>*500);
crop43.addItemInput(<mysticalagriculture:fluix_seeds>);
crop43.addItemOutput(<mysticalagriculture:fluix_seeds>);
crop43.addItemOutput(<mysticalagriculture:fluix_essence>*4);
crop43.addItemOutput(<mysticalagriculture:fluix_essence>);
crop43.setChance(0.50);
crop43.addItemOutput(<mysticalagriculture:fluix_essence>);
crop43.setChance(0.26);
crop43.addItemOutput(<mysticalagriculture:fluix_seeds>);
crop43.setChance(0.50);
crop43.build();

val crop44 = mods.modularmachinery.RecipeBuilder.newBuilder("crop44", "mystical_farm", 10000);
crop44.addEnergyPerTickInput(100);
crop44.addFluidInput(<liquid:water>*500);
crop44.addItemOutput(<mysticalagriculture:sky_stone_seeds>);
crop44.addItemInput(<mysticalagriculture:sky_stone_seeds>);
crop44.addItemOutput(<mysticalagriculture:sky_stone_essence>*4);
crop44.addItemOutput(<mysticalagriculture:sky_stone_essence>);
crop44.setChance(0.50);
crop44.addItemOutput(<mysticalagriculture:sky_stone_essence>);
crop44.setChance(0.26);
crop44.addItemOutput(<mysticalagriculture:sky_stone_seeds>);
crop44.setChance(0.50);
crop44.build();

val crop45 = mods.modularmachinery.RecipeBuilder.newBuilder("crop45", "mystical_farm", 10000);
crop45.addEnergyPerTickInput(100);
crop45.addFluidInput(<liquid:water>*500);
crop45.addItemOutput(<mysticalagriculture:meteoric_iron_seeds>);
crop45.addItemInput(<mysticalagriculture:meteoric_iron_seeds>);
crop45.addItemOutput(<mysticalagriculture:meteoric_iron_essence>*4);
crop45.addItemOutput(<mysticalagriculture:meteoric_iron_essence>);
crop45.setChance(0.50);
crop45.addItemOutput(<mysticalagriculture:meteoric_iron_essence>);
crop45.setChance(0.26);
crop45.addItemOutput(<mysticalagriculture:meteoric_iron_seeds>);
crop45.setChance(0.50);
crop45.build();

val crop46 = mods.modularmachinery.RecipeBuilder.newBuilder("crop46", "mystical_farm", 10000);
crop46.addEnergyPerTickInput(100);
crop46.addFluidInput(<liquid:water>*500);
crop46.addItemOutput(<mysticalagriculture:yellorium_seeds>);
crop46.addItemInput(<mysticalagriculture:yellorium_seeds>);
crop46.addItemOutput(<mysticalagriculture:yellorium_essence>*4);
crop46.addItemOutput(<mysticalagriculture:yellorium_essence>);
crop46.setChance(0.50);
crop46.addItemOutput(<mysticalagriculture:yellorium_essence>);
crop46.setChance(0.26);
crop46.addItemOutput(<mysticalagriculture:yellorium_seeds>);
crop46.setChance(0.50);
crop46.build();

val crop47 = mods.modularmachinery.RecipeBuilder.newBuilder("crop47", "mystical_farm", 10000);
crop47.addEnergyPerTickInput(100);
crop47.addFluidInput(<liquid:water>*500);
crop47.addItemInput(<mysticalagriculture:quicksilver_seeds>);
crop47.addItemOutput(<mysticalagriculture:quicksilver_seeds>);
crop47.addItemOutput(<mysticalagriculture:quicksilver_essence>*4);
crop47.addItemOutput(<mysticalagriculture:quicksilver_essence>);
crop47.setChance(0.50);
crop47.addItemOutput(<mysticalagriculture:quicksilver_essence>);
crop47.setChance(0.26);
crop47.addItemOutput(<mysticalagriculture:quicksilver_seeds>);
crop47.setChance(0.50);
crop47.build();

val crop48 = mods.modularmachinery.RecipeBuilder.newBuilder("crop48", "mystical_farm", 10000);
crop48.addEnergyPerTickInput(100);
crop48.addFluidInput(<liquid:water>*500);
crop48.addItemInput(<mysticalagriculture:apatite_seeds>);
crop48.addItemOutput(<mysticalagriculture:apatite_seeds>);
crop48.addItemOutput(<mysticalagriculture:apatite_essence>*4);
crop48.addItemOutput(<mysticalagriculture:apatite_essence>);
crop48.setChance(0.50);
crop48.addItemOutput(<mysticalagriculture:apatite_essence>);
crop48.setChance(0.26);
crop48.addItemOutput(<mysticalagriculture:apatite_seeds>);
crop48.setChance(0.50);
crop48.build();

val crop49 = mods.modularmachinery.RecipeBuilder.newBuilder("crop49", "mystical_farm", 10000);
crop49.addEnergyPerTickInput(100);
crop49.addFluidInput(<liquid:water>*500);
crop49.addItemInput(<mysticalagriculture:vibrant_alloy_seeds>);
crop49.addItemOutput(<mysticalagriculture:vibrant_alloy_seeds>);
crop49.addItemOutput(<mysticalagriculture:vibrant_alloy_essence>*4);
crop49.addItemOutput(<mysticalagriculture:vibrant_alloy_essence>);
crop49.setChance(0.50);
crop49.addItemOutput(<mysticalagriculture:vibrant_alloy_essence>);
crop49.setChance(0.26);
crop49.addItemOutput(<mysticalagriculture:vibrant_alloy_seeds>);
crop49.setChance(0.50);
crop49.build();

val crop50 = mods.modularmachinery.RecipeBuilder.newBuilder("crop50", "mystical_farm", 10000);
crop50.addEnergyPerTickInput(100);
crop50.addFluidInput(<liquid:water>*500);
crop50.addItemInput(<mysticalagriculture:energetic_alloy_seeds>);
crop50.addItemOutput(<mysticalagriculture:energetic_alloy_seeds>);
crop50.addItemOutput(<mysticalagriculture:energetic_alloy_essence>*4);
crop50.addItemOutput(<mysticalagriculture:energetic_alloy_essence>);
crop50.setChance(0.50);
crop50.addItemOutput(<mysticalagriculture:energetic_alloy_essence>);
crop50.setChance(0.26);
crop50.addItemOutput(<mysticalagriculture:energetic_alloy_seeds>);
crop50.setChance(0.50);
crop50.build();

val crop51 = mods.modularmachinery.RecipeBuilder.newBuilder("crop51", "mystical_farm", 10000);
crop51.addEnergyPerTickInput(100);
crop51.addFluidInput(<liquid:water>*500);
crop51.addItemInput(<mysticalagriculture:pulsating_iron_seeds>);
crop51.addItemOutput(<mysticalagriculture:pulsating_iron_seeds>);
crop51.addItemOutput(<mysticalagriculture:pulsating_iron_essence>*4);
crop51.addItemOutput(<mysticalagriculture:pulsating_iron_essence>);
crop51.setChance(0.50);
crop51.addItemOutput(<mysticalagriculture:pulsating_iron_essence>);
crop51.setChance(0.26);
crop51.addItemOutput(<mysticalagriculture:pulsating_iron_seeds>);
crop51.setChance(0.50);
crop51.build();

val crop52 = mods.modularmachinery.RecipeBuilder.newBuilder("crop52", "mystical_farm", 10000);
crop52.addEnergyPerTickInput(100);
crop52.addFluidInput(<liquid:water>*500);
crop52.addItemInput(<mysticalagriculture:dark_steel_seeds>);
crop52.addItemOutput(<mysticalagriculture:dark_steel_seeds>);
crop52.addItemOutput(<mysticalagriculture:dark_steel_essence>*4);
crop52.addItemOutput(<mysticalagriculture:dark_steel_essence>);
crop52.setChance(0.50);
crop52.addItemOutput(<mysticalagriculture:dark_steel_essence>);
crop52.setChance(0.26);
crop52.addItemOutput(<mysticalagriculture:dark_steel_seeds>);
crop52.setChance(0.50);
crop52.build();

val crop53 = mods.modularmachinery.RecipeBuilder.newBuilder("crop53", "mystical_farm", 10000);
crop53.addEnergyPerTickInput(100);
crop53.addFluidInput(<liquid:water>*500);
crop53.addItemInput(<mysticalagriculture:soularium_seeds>);
crop53.addItemOutput(<mysticalagriculture:soularium_seeds>);
crop53.addItemOutput(<mysticalagriculture:soularium_essence>*4);
crop53.addItemOutput(<mysticalagriculture:soularium_essence>);
crop53.setChance(0.50);
crop53.addItemOutput(<mysticalagriculture:soularium_essence>);
crop53.setChance(0.26);
crop53.addItemOutput(<mysticalagriculture:soularium_seeds>);
crop53.setChance(0.50);
crop53.build();

val crop54 = mods.modularmachinery.RecipeBuilder.newBuilder("crop54", "mystical_farm", 10000);
crop54.addEnergyPerTickInput(100);
crop54.addFluidInput(<liquid:water>*500);
crop54.addItemInput(<mysticalagriculture:conductive_iron_seeds>);
crop54.addItemOutput(<mysticalagriculture:conductive_iron_seeds>);
crop54.addItemOutput(<mysticalagriculture:conductive_iron_essence>*4);
crop54.addItemOutput(<mysticalagriculture:conductive_iron_essence>);
crop54.setChance(0.50);
crop54.addItemOutput(<mysticalagriculture:conductive_iron_essence>);
crop54.setChance(0.26);
crop54.addItemOutput(<mysticalagriculture:conductive_iron_seeds>);
crop54.setChance(0.50);
crop54.build();

val crop55 = mods.modularmachinery.RecipeBuilder.newBuilder("crop55", "mystical_farm", 10000);
crop55.addEnergyPerTickInput(100);
crop55.addFluidInput(<liquid:water>*500);
crop55.addItemInput(<mysticalagriculture:electrical_steel_seeds>);
crop55.addItemOutput(<mysticalagriculture:electrical_steel_seeds>);
crop55.addItemOutput(<mysticalagriculture:electrical_steel_essence>*4);
crop55.addItemOutput(<mysticalagriculture:electrical_steel_essence>);
crop55.setChance(0.50);
crop55.addItemOutput(<mysticalagriculture:electrical_steel_essence>);
crop55.setChance(0.26);
crop55.addItemOutput(<mysticalagriculture:electrical_steel_seeds>);
crop55.setChance(0.50);
crop55.build();

val crop56 = mods.modularmachinery.RecipeBuilder.newBuilder("crop56", "mystical_farm", 10000);
crop56.addEnergyPerTickInput(100);
crop56.addFluidInput(<liquid:water>*500);
crop56.addItemInput(<mysticalagriculture:grains_of_infinity_seeds>);
crop56.addItemOutput(<mysticalagriculture:grains_of_infinity_seeds>);
crop56.addItemOutput(<mysticalagriculture:grains_of_infinity_essence>*4);
crop56.addItemOutput(<mysticalagriculture:grains_of_infinity_essence>);
crop56.setChance(0.50);
crop56.addItemOutput(<mysticalagriculture:grains_of_infinity_essence>);
crop56.setChance(0.26);
crop56.addItemOutput(<mysticalagriculture:grains_of_infinity_seeds>);
crop56.setChance(0.50);
crop56.build();

val crop57 = mods.modularmachinery.RecipeBuilder.newBuilder("crop57", "mystical_farm", 10000);
crop57.addEnergyPerTickInput(100);
crop57.addFluidInput(<liquid:water>*500);
crop57.addItemInput(<mysticalagriculture:manyullyn_seeds>);
crop57.addItemOutput(<mysticalagriculture:manyullyn_seeds>);
crop57.addItemOutput(<mysticalagriculture:manyullyn_essence>*4);
crop57.addItemOutput(<mysticalagriculture:manyullyn_essence>);
crop57.setChance(0.50);
crop57.addItemOutput(<mysticalagriculture:manyullyn_essence>);
crop57.setChance(0.26);
crop57.addItemOutput(<mysticalagriculture:manyullyn_seeds>);
crop57.setChance(0.50);
crop57.build();

val crop58 = mods.modularmachinery.RecipeBuilder.newBuilder("crop58", "mystical_farm", 10000);
crop58.addEnergyPerTickInput(100);
crop58.addFluidInput(<liquid:water>*500);
crop58.addItemInput(<mysticalagriculture:cobalt_seeds>);
crop58.addItemOutput(<mysticalagriculture:cobalt_seeds>);
crop58.addItemOutput(<mysticalagriculture:cobalt_essence>*4);
crop58.addItemOutput(<mysticalagriculture:cobalt_essence>);
crop58.setChance(0.50);
crop58.addItemOutput(<mysticalagriculture:cobalt_essence>);
crop58.setChance(0.26);
crop58.addItemOutput(<mysticalagriculture:cobalt_seeds>);
crop58.setChance(0.50);
crop58.build();

val crop59 = mods.modularmachinery.RecipeBuilder.newBuilder("crop59", "mystical_farm", 10000);
crop59.addEnergyPerTickInput(100);
crop59.addFluidInput(<liquid:water>*500);
crop59.addItemInput(<mysticalagriculture:ardite_seeds>);
crop59.addItemOutput(<mysticalagriculture:ardite_seeds>);
crop59.addItemOutput(<mysticalagriculture:ardite_essence>*4);
crop59.addItemOutput(<mysticalagriculture:ardite_essence>);
crop59.setChance(0.50);
crop59.addItemOutput(<mysticalagriculture:ardite_essence>);
crop59.setChance(0.26);
crop59.addItemOutput(<mysticalagriculture:ardite_seeds>);
crop59.setChance(0.50);
crop59.build();

val crop60 = mods.modularmachinery.RecipeBuilder.newBuilder("crop60", "mystical_farm", 10000);
crop60.addEnergyPerTickInput(100);
crop60.addFluidInput(<liquid:water>*500);
crop60.addItemInput(<mysticalagriculture:knightslime_seeds>);
crop60.addItemOutput(<mysticalagriculture:knightslime_seeds>);
crop60.addItemOutput(<mysticalagriculture:knightslime_essence>*4);
crop60.addItemOutput(<mysticalagriculture:knightslime_essence>);
crop60.setChance(0.50);
crop60.addItemOutput(<mysticalagriculture:knightslime_essence>);
crop60.setChance(0.26);
crop60.addItemOutput(<mysticalagriculture:knightslime_seeds>);
crop60.setChance(0.50);
crop60.build();

val crop61 = mods.modularmachinery.RecipeBuilder.newBuilder("crop61", "mystical_farm", 10000);
crop61.addEnergyPerTickInput(100);
crop61.addFluidInput(<liquid:water>*500);
crop61.addItemInput(<mysticalagriculture:aluminum_brass_seeds>);
crop61.addItemOutput(<mysticalagriculture:aluminum_brass_seeds>);
crop61.addItemOutput(<mysticalagriculture:aluminum_brass_essence>*4);
crop61.addItemOutput(<mysticalagriculture:aluminum_brass_essence>);
crop61.setChance(0.50);
crop61.addItemOutput(<mysticalagriculture:aluminum_brass_essence>);
crop61.setChance(0.26);
crop61.addItemOutput(<mysticalagriculture:aluminum_brass_seeds>);
crop61.setChance(0.50);
crop61.build();

val crop62 = mods.modularmachinery.RecipeBuilder.newBuilder("crop62", "mystical_farm", 10000);
crop62.addEnergyPerTickInput(100);
crop62.addFluidInput(<liquid:water>*500);
crop62.addItemInput(<mysticalagriculture:fluxed_electrum_seeds>);
crop62.addItemOutput(<mysticalagriculture:fluxed_electrum_seeds>);
crop62.addItemOutput(<mysticalagriculture:fluxed_electrum_essence>*4);
crop62.addItemOutput(<mysticalagriculture:fluxed_electrum_essence>);
crop62.setChance(0.50);
crop62.addItemOutput(<mysticalagriculture:fluxed_electrum_essence>);
crop62.setChance(0.26);
crop62.addItemOutput(<mysticalagriculture:fluxed_electrum_seeds>);
crop62.setChance(0.50);
crop62.build();

val crop63 = mods.modularmachinery.RecipeBuilder.newBuilder("crop63", "mystical_farm", 10000);
crop63.addEnergyPerTickInput(100);
crop63.addFluidInput(<liquid:water>*500);
crop63.addItemInput(<mysticalagriculture:lumium_seeds>);
crop63.addItemOutput(<mysticalagriculture:lumium_seeds>);
crop63.addItemOutput(<mysticalagriculture:lumium_essence>*4);
crop63.addItemOutput(<mysticalagriculture:lumium_essence>);
crop63.setChance(0.50);
crop63.addItemOutput(<mysticalagriculture:lumium_essence>);
crop63.setChance(0.26);
crop63.addItemOutput(<mysticalagriculture:lumium_seeds>);
crop63.setChance(0.50);
crop63.build();



val crop64 = mods.modularmachinery.RecipeBuilder.newBuilder("crop64", "mystical_farm", 10000);
crop64.addEnergyPerTickInput(100);
crop64.addFluidInput(<liquid:water>*500);
crop64.addItemInput(<mysticalagriculture:graphite_seeds>);
crop64.addItemOutput(<mysticalagriculture:graphite_seeds>);
crop64.addItemOutput(<mysticalagriculture:graphite_essence>*4);
crop64.addItemOutput(<mysticalagriculture:graphite_essence>);
crop64.setChance(0.50);
crop64.addItemOutput(<mysticalagriculture:graphite_essence>);
crop64.setChance(0.26);
crop64.addItemOutput(<mysticalagriculture:graphite_seeds>);
crop64.setChance(0.50);
crop64.build();

val crop65 = mods.modularmachinery.RecipeBuilder.newBuilder("crop65", "mystical_farm", 10000);
crop65.addEnergyPerTickInput(100);
crop65.addFluidInput(<liquid:water>*500);
crop65.addItemInput(<mysticalagriculture:signalum_seeds>);
crop65.addItemOutput(<mysticalagriculture:signalum_seeds>);
crop65.addItemOutput(<mysticalagriculture:signalum_essence>*4);
crop65.addItemOutput(<mysticalagriculture:signalum_essence>);
crop65.setChance(0.50);
crop65.addItemOutput(<mysticalagriculture:signalum_essence>);
crop65.setChance(0.26);
crop65.addItemOutput(<mysticalagriculture:signalum_seeds>);
crop65.setChance(0.50);
crop65.build();

val crop66 = mods.modularmachinery.RecipeBuilder.newBuilder("crop66", "mystical_farm", 10000);
crop66.addEnergyPerTickInput(100);
crop66.addFluidInput(<liquid:water>*500);
crop66.addItemInput(<mysticalagriculture:basalz_seeds>);
crop66.addItemOutput(<mysticalagriculture:basalz_seeds>);
crop66.addItemOutput(<mysticalagriculture:basalz_essence>*4);
crop66.addItemOutput(<mysticalagriculture:basalz_essence>);
crop66.setChance(0.50);
crop66.addItemOutput(<mysticalagriculture:basalz_essence>);
crop66.setChance(0.26);
crop66.addItemOutput(<mysticalagriculture:basalz_seeds>);
crop66.setChance(0.50);
crop66.build();

val crop67 = mods.modularmachinery.RecipeBuilder.newBuilder("crop67", "mystical_farm", 10000);
crop67.addEnergyPerTickInput(100);
crop67.addFluidInput(<liquid:water>*500);
crop67.addItemInput(<mysticalagriculture:blitz_seeds>);
crop67.addItemOutput(<mysticalagriculture:blitz_seeds>);
crop67.addItemOutput(<mysticalagriculture:blitz_essence>*4);
crop67.addItemOutput(<mysticalagriculture:blitz_essence>);
crop67.setChance(0.50);
crop67.addItemOutput(<mysticalagriculture:blitz_essence>);
crop67.setChance(0.26);
crop67.addItemOutput(<mysticalagriculture:blitz_seeds>);
crop67.setChance(0.50);
crop67.build();

val crop68 = mods.modularmachinery.RecipeBuilder.newBuilder("crop68", "mystical_farm", 10000);
crop68.addEnergyPerTickInput(100);
crop68.addFluidInput(<liquid:water>*500);
crop68.addItemInput(<mysticalagriculture:blizz_seeds>);
crop68.addItemOutput(<mysticalagriculture:blizz_seeds>);
crop68.addItemOutput(<mysticalagriculture:blizz_essence>*4);
crop68.addItemOutput(<mysticalagriculture:blizz_essence>);
crop68.setChance(0.50);
crop68.addItemOutput(<mysticalagriculture:blizz_essence>);
crop68.setChance(0.26);
crop68.addItemOutput(<mysticalagriculture:blizz_seeds>);
crop68.setChance(0.50);
crop68.build();

val crop69 = mods.modularmachinery.RecipeBuilder.newBuilder("crop69", "mystical_farm", 10000);
crop69.addEnergyPerTickInput(100);
crop69.addFluidInput(<liquid:water>*500);
crop69.addItemInput(<mysticalagriculture:sapphire_seeds>);
crop69.addItemOutput(<mysticalagriculture:sapphire_essence>*4);
crop69.addItemOutput(<mysticalagriculture:sapphire_essence>);
crop69.setChance(0.50);
crop69.addItemOutput(<mysticalagriculture:sapphire_essence>);
crop69.setChance(0.26);
crop69.addItemOutput(<mysticalagriculture:sapphire_seeds>);
crop69.setChance(0.50);
crop69.build();

val crop70 = mods.modularmachinery.RecipeBuilder.newBuilder("crop70", "mystical_farm", 10000);
crop70.addEnergyPerTickInput(100);
crop70.addFluidInput(<liquid:water>*500);
crop70.addItemInput(<mysticalagriculture:ruby_seeds>);
crop70.addItemOutput(<mysticalagriculture:ruby_seeds>);
crop70.addItemOutput(<mysticalagriculture:ruby_essence>*4);
crop70.addItemOutput(<mysticalagriculture:ruby_essence>);
crop70.setChance(0.50);
crop70.addItemOutput(<mysticalagriculture:ruby_essence>);
crop70.setChance(0.26);
crop70.addItemOutput(<mysticalagriculture:ruby_seeds>);
crop70.setChance(0.50);
crop70.build();

val crop71 = mods.modularmachinery.RecipeBuilder.newBuilder("crop71", "mystical_farm", 10000);
crop71.addEnergyPerTickInput(100);
crop71.addFluidInput(<liquid:water>*500);
crop71.addItemInput(<mysticalagriculture:constantan_seeds>);
crop71.addItemOutput(<mysticalagriculture:constantan_seeds>);
crop71.addItemOutput(<mysticalagriculture:constantan_essence>*4);
crop71.addItemOutput(<mysticalagriculture:constantan_essence>);
crop71.setChance(0.50);
crop71.addItemOutput(<mysticalagriculture:constantan_essence>);
crop71.setChance(0.26);
crop71.addItemOutput(<mysticalagriculture:constantan_seeds>);
crop71.setChance(0.50);
crop71.build();

val crop72 = mods.modularmachinery.RecipeBuilder.newBuilder("crop72", "mystical_farm", 10000);
crop72.addEnergyPerTickInput(100);
crop72.addFluidInput(<liquid:water>*500);
crop72.addItemInput(<mysticalagriculture:saltpeter_seeds>);
crop72.addItemOutput(<mysticalagriculture:saltpeter_seeds>);
crop72.addItemOutput(<mysticalagriculture:saltpeter_essence>*4);
crop72.addItemOutput(<mysticalagriculture:saltpeter_essence>);
crop72.setChance(0.50);
crop72.addItemOutput(<mysticalagriculture:saltpeter_essence>);
crop72.setChance(0.26);
crop72.addItemOutput(<mysticalagriculture:saltpeter_seeds>);
crop72.setChance(0.50);
crop72.build();



val crop73 = mods.modularmachinery.RecipeBuilder.newBuilder("crop73", "mystical_farm", 10000);
crop73.addEnergyPerTickInput(100);
crop73.addFluidInput(<liquid:water>*500);
crop73.addItemInput(<mysticalagriculture:guardian_seeds>);
crop73.addItemOutput(<mysticalagriculture:guardian_seeds>);
crop73.addItemOutput(<mysticalagriculture:guardian_essence>*4);
crop73.addItemOutput(<mysticalagriculture:guardian_essence>);
crop73.setChance(0.50);
crop73.addItemOutput(<mysticalagriculture:guardian_essence>);
crop73.setChance(0.26);
crop73.addItemOutput(<mysticalagriculture:guardian_seeds>);
crop73.setChance(0.50);
crop73.build();

val crop74 = mods.modularmachinery.RecipeBuilder.newBuilder("crop74", "mystical_farm", 10000);
crop74.addEnergyPerTickInput(100);
crop74.addFluidInput(<liquid:water>*500);
crop74.addItemInput(<mysticalagriculture:ghast_seeds>);
crop74.addItemOutput(<mysticalagriculture:ghast_seeds>);
crop74.addItemOutput(<mysticalagriculture:ghast_essence>*4);
crop74.addItemOutput(<mysticalagriculture:ghast_essence>);
crop74.setChance(0.50);
crop74.addItemOutput(<mysticalagriculture:ghast_essence>);
crop74.setChance(0.26);
crop74.addItemOutput(<mysticalagriculture:ghast_seeds>);
crop74.setChance(0.50);
crop74.build();

val crop75 = mods.modularmachinery.RecipeBuilder.newBuilder("crop75", "mystical_farm", 10000);
crop75.addEnergyPerTickInput(100);
crop75.addFluidInput(<liquid:water>*500);
crop75.addItemInput(<mysticalagriculture:creeper_seeds>);
crop75.addItemOutput(<mysticalagriculture:creeper_seeds>);
crop75.addItemOutput(<mysticalagriculture:creeper_essence>*4);
crop75.addItemOutput(<mysticalagriculture:creeper_essence>);
crop75.setChance(0.50);
crop75.addItemOutput(<mysticalagriculture:creeper_essence>);
crop75.setChance(0.26);
crop75.addItemOutput(<mysticalagriculture:creeper_seeds>);
crop75.setChance(0.50);
crop75.build();

val crop76 = mods.modularmachinery.RecipeBuilder.newBuilder("crop76", "mystical_farm", 10000);
crop76.addEnergyPerTickInput(100);
crop76.addFluidInput(<liquid:water>*500);
crop76.addItemInput(<mysticalagriculture:blaze_seeds>);
crop76.addItemOutput(<mysticalagriculture:blaze_seeds>);
crop76.addItemOutput(<mysticalagriculture:blaze_essence>*4);
crop76.addItemOutput(<mysticalagriculture:blaze_essence>);
crop76.setChance(0.50);
crop76.addItemOutput(<mysticalagriculture:blaze_essence>);
crop76.setChance(0.26);
crop76.addItemOutput(<mysticalagriculture:blaze_seeds>);
crop76.setChance(0.50);
crop76.build();

val crop77 = mods.modularmachinery.RecipeBuilder.newBuilder("crop77", "mystical_farm", 10000);
crop77.addEnergyPerTickInput(100);
crop77.addFluidInput(<liquid:water>*500);
crop77.addItemInput(<mysticalagriculture:sheep_seeds>);
crop77.addItemOutput(<mysticalagriculture:sheep_seeds>);
crop77.addItemOutput(<mysticalagriculture:sheep_essence>*4);
crop77.addItemOutput(<mysticalagriculture:sheep_essence>);
crop77.setChance(0.50);
crop77.addItemOutput(<mysticalagriculture:sheep_essence>);
crop77.setChance(0.26);
crop77.addItemOutput(<mysticalagriculture:sheep_seeds>);
crop77.setChance(0.50);
crop77.build();

val crop78 = mods.modularmachinery.RecipeBuilder.newBuilder("crop78", "mystical_farm", 10000);
crop78.addEnergyPerTickInput(100);
crop78.addFluidInput(<liquid:water>*500);
crop78.addItemInput(<mysticalagriculture:enderman_seeds>);
crop78.addItemOutput(<mysticalagriculture:enderman_seeds>);
crop78.addItemOutput(<mysticalagriculture:enderman_essence>*4);
crop78.addItemOutput(<mysticalagriculture:enderman_essence>);
crop78.setChance(0.50);
crop78.addItemOutput(<mysticalagriculture:enderman_essence>);
crop78.setChance(0.26);
crop78.addItemOutput(<mysticalagriculture:enderman_seeds>);
crop78.setChance(0.50);
crop78.build();

val crop79 = mods.modularmachinery.RecipeBuilder.newBuilder("crop79", "mystical_farm", 10000);
crop79.addEnergyPerTickInput(100);
crop79.addFluidInput(<liquid:water>*500);
crop79.addItemInput(<mysticalagriculture:wither_skeleton_seeds>);
crop79.addItemOutput(<mysticalagriculture:wither_skeleton_seeds>);
crop79.addItemOutput(<mysticalagriculture:wither_skeleton_essence>*4);
crop79.addItemOutput(<mysticalagriculture:wither_skeleton_essence>);
crop79.setChance(0.50);
crop79.addItemOutput(<mysticalagriculture:wither_skeleton_essence>);
crop79.setChance(0.26);
crop79.addItemOutput(<mysticalagriculture:wither_skeleton_seeds>);
crop79.setChance(0.50);
crop79.build();

val crop80 = mods.modularmachinery.RecipeBuilder.newBuilder("crop80", "mystical_farm", 10000);
crop80.addEnergyPerTickInput(100);
crop80.addFluidInput(<liquid:water>*500);
crop80.addItemInput(<mysticalagriculture:spider_seeds>);
crop80.addItemOutput(<mysticalagriculture:spider_seeds>);
crop80.addItemOutput(<mysticalagriculture:spider_essence>*4);
crop80.addItemOutput(<mysticalagriculture:spider_essence>);
crop80.setChance(0.50);
crop80.addItemOutput(<mysticalagriculture:spider_essence>);
crop80.setChance(0.26);
crop80.addItemOutput(<mysticalagriculture:spider_seeds>);
crop80.setChance(0.50);
crop80.build();

val crop81 = mods.modularmachinery.RecipeBuilder.newBuilder("crop81", "mystical_farm", 10000);
crop81.addEnergyPerTickInput(100);
crop81.addFluidInput(<liquid:water>*500);
crop81.addItemInput(<mysticalagriculture:experience_seeds>);
crop81.addItemOutput(<mysticalagriculture:experience_seeds>);
crop81.addItemOutput(<mysticalagriculture:experience_essence>*4);
crop81.addItemOutput(<mysticalagriculture:experience_essence>);
crop81.setChance(0.50);
crop81.addItemOutput(<mysticalagriculture:experience_essence>);
crop81.setChance(0.26);
crop81.addItemOutput(<mysticalagriculture:experience_seeds>);
crop81.setChance(0.50);
crop81.build();

val crop82 = mods.modularmachinery.RecipeBuilder.newBuilder("crop82", "mystical_farm", 10000);
crop82.addEnergyPerTickInput(100);
crop82.addFluidInput(<liquid:water>*500);
crop82.addItemInput(<mysticalagriculture:diamond_seeds>);
crop82.addItemOutput(<mysticalagriculture:diamond_seeds>);
crop82.addItemOutput(<mysticalagriculture:diamond_essence>*4);
crop82.addItemOutput(<mysticalagriculture:diamond_essence>);
crop82.setChance(0.50);
crop82.addItemOutput(<mysticalagriculture:diamond_essence>);
crop82.setChance(0.26);
crop82.addItemOutput(<mysticalagriculture:diamond_seeds>);
crop82.setChance(0.50);
crop82.build();

val crop83 = mods.modularmachinery.RecipeBuilder.newBuilder("crop83", "mystical_farm", 10000);
crop83.addEnergyPerTickInput(100);
crop83.addFluidInput(<liquid:water>*500);
crop83.addItemInput(<mysticalagriculture:emerald_seeds>);
crop83.addItemOutput(<mysticalagriculture:emerald_seeds>);
crop83.addItemOutput(<mysticalagriculture:emerald_essence>*4);
crop83.addItemOutput(<mysticalagriculture:emerald_essence>);
crop83.setChance(0.50);
crop83.addItemOutput(<mysticalagriculture:emerald_essence>);
crop83.setChance(0.26);
crop83.addItemOutput(<mysticalagriculture:emerald_seeds>);
crop83.setChance(0.50);
crop83.build();

val crop84 = mods.modularmachinery.RecipeBuilder.newBuilder("crop84", "mystical_farm", 10000);
crop84.addEnergyPerTickInput(100);
crop84.addFluidInput(<liquid:water>*500);
crop84.addItemInput(<mysticalagriculture:pig_seeds>);
crop84.addItemOutput(<mysticalagriculture:pig_seeds>);
crop84.addItemOutput(<mysticalagriculture:pig_essence>*4);
crop84.addItemOutput(<mysticalagriculture:pig_essence>);
crop84.setChance(0.50);
crop84.addItemOutput(<mysticalagriculture:pig_essence>);
crop84.setChance(0.26);
crop84.addItemOutput(<mysticalagriculture:pig_seeds>);
crop84.setChance(0.50);
crop84.build();

val crop85 = mods.modularmachinery.RecipeBuilder.newBuilder("crop85", "mystical_farm", 10000);
crop85.addEnergyPerTickInput(100);
crop85.addFluidInput(<liquid:water>*500);
crop85.addItemInput(<mysticalagriculture:chicken_seeds>);
crop85.addItemOutput(<mysticalagriculture:chicken_seeds>);
crop85.addItemOutput(<mysticalagriculture:chicken_essence>*4);
crop85.addItemOutput(<mysticalagriculture:chicken_essence>);
crop85.setChance(0.50);
crop85.addItemOutput(<mysticalagriculture:chicken_essence>);
crop85.setChance(0.26);
crop85.addItemOutput(<mysticalagriculture:chicken_seeds>);
crop85.setChance(0.50);
crop85.build();

val crop86 = mods.modularmachinery.RecipeBuilder.newBuilder("crop86", "mystical_farm", 10000);
crop86.addEnergyPerTickInput(100);
crop86.addFluidInput(<liquid:water>*500);
crop86.addItemInput(<mysticalagriculture:zombie_seeds>);
crop86.addItemOutput(<mysticalagriculture:zombie_seeds>);
crop86.addItemOutput(<mysticalagriculture:zombie_essence>*4);
crop86.addItemOutput(<mysticalagriculture:zombie_essence>);
crop86.setChance(0.50);
crop86.addItemOutput(<mysticalagriculture:zombie_essence>);
crop86.setChance(0.26);
crop86.addItemOutput(<mysticalagriculture:zombie_seeds>);
crop86.setChance(0.50);
crop86.build();

val crop87 = mods.modularmachinery.RecipeBuilder.newBuilder("crop87", "mystical_farm", 10000);
crop87.addEnergyPerTickInput(100);
crop87.addFluidInput(<liquid:water>*500);
crop87.addItemInput(<mysticalagriculture:cow_seeds>);
crop87.addItemOutput(<mysticalagriculture:cow_seeds>);
crop87.addItemOutput(<mysticalagriculture:cow_essence>*4);
crop87.addItemOutput(<mysticalagriculture:cow_essence>);
crop87.setChance(0.50);
crop87.addItemOutput(<mysticalagriculture:cow_essence>);
crop87.setChance(0.26);
crop87.addItemOutput(<mysticalagriculture:cow_seeds>);
crop87.setChance(0.50);
crop87.build();

val crop88 = mods.modularmachinery.RecipeBuilder.newBuilder("crop88", "mystical_farm", 10000);
crop88.addEnergyPerTickInput(100);
crop88.addFluidInput(<liquid:water>*500);
crop88.addItemInput(<mysticalagriculture:slime_seeds>);
crop88.addItemOutput(<mysticalagriculture:slime_seeds>);
crop88.addItemOutput(<mysticalagriculture:slime_essence>*4);
crop88.addItemOutput(<mysticalagriculture:slime_essence>);
crop88.setChance(0.50);
crop88.addItemOutput(<mysticalagriculture:slime_essence>);
crop88.setChance(0.26);
crop88.addItemOutput(<mysticalagriculture:slime_seeds>);
crop88.setChance(0.50);
crop88.build();

val crop89 = mods.modularmachinery.RecipeBuilder.newBuilder("crop89", "mystical_farm", 10000);
crop89.addEnergyPerTickInput(100);
crop89.addFluidInput(<liquid:water>*500);
crop89.addItemInput(<mysticalagriculture:skeleton_seeds>);
crop89.addItemOutput(<mysticalagriculture:skeleton_seeds>);
crop89.addItemOutput(<mysticalagriculture:skeleton_essence>*4);
crop89.addItemOutput(<mysticalagriculture:skeleton_essence>);
crop89.setChance(0.50);
crop89.addItemOutput(<mysticalagriculture:skeleton_essence>);
crop89.setChance(0.26);
crop89.addItemOutput(<mysticalagriculture:skeleton_seeds>);
crop89.setChance(0.50);
crop89.build();

val crop90 = mods.modularmachinery.RecipeBuilder.newBuilder("crop90", "mystical_farm", 10000);
crop90.addEnergyPerTickInput(100);
crop90.addFluidInput(<liquid:water>*500);
crop90.addItemInput(<mysticalagriculture:end_seeds>);
crop90.addItemOutput(<mysticalagriculture:end_seeds>);
crop90.addItemOutput(<mysticalagriculture:end_essence>*4);
crop90.addItemOutput(<mysticalagriculture:end_essence>);
crop90.setChance(0.50);
crop90.addItemOutput(<mysticalagriculture:end_essence>);
crop90.setChance(0.26);
crop90.addItemOutput(<mysticalagriculture:end_seeds>);
crop90.setChance(0.50);
crop90.build();

val crop91 = mods.modularmachinery.RecipeBuilder.newBuilder("crop91", "mystical_farm", 10000);
crop91.addEnergyPerTickInput(100);
crop91.addFluidInput(<liquid:water>*500);
crop91.addItemInput(<mysticalagriculture:obsidian_seeds>);
crop91.addItemOutput(<mysticalagriculture:obsidian_seeds>);
crop91.addItemOutput(<mysticalagriculture:obsidian_essence>*4);
crop91.addItemOutput(<mysticalagriculture:obsidian_essence>);
crop91.setChance(0.50);
crop91.addItemOutput(<mysticalagriculture:obsidian_essence>);
crop91.setChance(0.26);
crop91.addItemOutput(<mysticalagriculture:obsidian_seeds>);
crop91.setChance(0.50);
crop91.build();

val crop92 = mods.modularmachinery.RecipeBuilder.newBuilder("crop92", "mystical_farm", 10000);
crop92.addEnergyPerTickInput(100);
crop92.addFluidInput(<liquid:water>*500);
crop92.addItemInput(<mysticalagriculture:coal_seeds>);
crop92.addItemOutput(<mysticalagriculture:coal_seeds>);
crop92.addItemOutput(<mysticalagriculture:coal_essence>*4);
crop92.addItemOutput(<mysticalagriculture:coal_essence>);
crop92.setChance(0.50);
crop92.addItemOutput(<mysticalagriculture:coal_essence>);
crop92.setChance(0.26);
crop92.addItemOutput(<mysticalagriculture:coal_seeds>);
crop92.setChance(0.50);
crop92.build();

val crop93 = mods.modularmachinery.RecipeBuilder.newBuilder("crop93", "mystical_farm", 10000);
crop93.addEnergyPerTickInput(100);
crop93.addFluidInput(<liquid:water>*500);
crop93.addItemInput(<mysticalagriculture:nether_seeds>);
crop93.addItemOutput(<mysticalagriculture:nether_seeds>);
crop93.addItemOutput(<mysticalagriculture:nether_essence>*4);
crop93.addItemOutput(<mysticalagriculture:nether_essence>);
crop93.setChance(0.50);
crop93.addItemOutput(<mysticalagriculture:nether_essence>);
crop93.setChance(0.26);
crop93.addItemOutput(<mysticalagriculture:nether_seeds>);
crop93.setChance(0.50);
crop93.build();

val crop94 = mods.modularmachinery.RecipeBuilder.newBuilder("crop94", "mystical_farm", 10000);
crop94.addEnergyPerTickInput(100);
crop94.addFluidInput(<liquid:water>*500);
crop94.addItemInput(<mysticalagriculture:dye_seeds>);
crop94.addItemOutput(<mysticalagriculture:dye_seeds>);
crop94.addItemOutput(<mysticalagriculture:dye_essence>*4);
crop94.addItemOutput(<mysticalagriculture:dye_essence>);
crop94.setChance(0.50);
crop94.addItemOutput(<mysticalagriculture:dye_essence>);
crop94.setChance(0.26);
crop94.addItemOutput(<mysticalagriculture:dye_seeds>);
crop94.setChance(0.50);
crop94.build();

val crop95 = mods.modularmachinery.RecipeBuilder.newBuilder("crop95", "mystical_farm", 10000);
crop95.addEnergyPerTickInput(100);
crop95.addFluidInput(<liquid:water>*500);
crop95.addItemInput(<mysticalagriculture:fire_seeds>);
crop95.addItemOutput(<mysticalagriculture:fire_seeds>);
crop95.addItemOutput(<mysticalagriculture:fire_essence>*4);
crop95.addItemOutput(<mysticalagriculture:fire_essence>);
crop95.setChance(0.50);
crop95.addItemOutput(<mysticalagriculture:fire_essence>);
crop95.setChance(0.26);
crop95.addItemOutput(<mysticalagriculture:fire_seeds>);
crop95.setChance(0.50);
crop95.build();

val crop96 = mods.modularmachinery.RecipeBuilder.newBuilder("crop96", "mystical_farm", 10000);
crop96.addEnergyPerTickInput(100);
crop96.addFluidInput(<liquid:water>*500);
crop96.addItemInput(<mysticalagriculture:water_seeds>);
crop96.addItemOutput(<mysticalagriculture:water_seeds>);
crop96.addItemOutput(<mysticalagriculture:water_essence>*4);
crop96.addItemOutput(<mysticalagriculture:water_essence>);
crop96.setChance(0.50);
crop96.addItemOutput(<mysticalagriculture:water_essence>);
crop96.setChance(0.26);
crop96.addItemOutput(<mysticalagriculture:water_seeds>);
crop96.setChance(0.50);
crop96.build();

val crop97 = mods.modularmachinery.RecipeBuilder.newBuilder("crop97", "mystical_farm", 10000);
crop97.addEnergyPerTickInput(100);
crop97.addFluidInput(<liquid:water>*500);
crop97.addItemInput(<mysticalagriculture:ice_seeds>);
crop97.addItemOutput(<mysticalagriculture:ice_seeds>);
crop97.addItemOutput(<mysticalagriculture:ice_essence>*4);
crop97.addItemOutput(<mysticalagriculture:ice_essence>);
crop97.setChance(0.50);
crop97.addItemOutput(<mysticalagriculture:ice_essence>);
crop97.setChance(0.26);
crop97.addItemOutput(<mysticalagriculture:ice_seeds>);
crop97.setChance(0.50);
crop97.build();

val crop98 = mods.modularmachinery.RecipeBuilder.newBuilder("crop98", "mystical_farm", 10000);
crop98.addEnergyPerTickInput(100);
crop98.addFluidInput(<liquid:water>*500);
crop98.addItemInput(<mysticalagriculture:wood_seeds>);
crop98.addItemOutput(<mysticalagriculture:wood_seeds>);
crop98.addItemOutput(<mysticalagriculture:wood_essence>*4);
crop98.addItemOutput(<mysticalagriculture:wood_essence>);
crop98.setChance(0.50);
crop98.addItemOutput(<mysticalagriculture:wood_essence>);
crop98.setChance(0.26);
crop98.addItemOutput(<mysticalagriculture:wood_seeds>);
crop98.setChance(0.50);
crop98.build();



val crop99 = mods.modularmachinery.RecipeBuilder.newBuilder("crop99", "mystical_farm", 10000);
crop99.addEnergyPerTickInput(100);
crop99.addFluidInput(<liquid:water>*500);
crop99.addItemInput(<mysticalagriculture:stone_seeds>);
crop99.addItemOutput(<mysticalagriculture:stone_seeds>);
crop99.addItemOutput(<mysticalagriculture:stone_essence>*4);
crop99.addItemOutput(<mysticalagriculture:stone_essence>);
crop99.setChance(0.50);
crop99.addItemOutput(<mysticalagriculture:stone_essence>);
crop99.setChance(0.26);
crop99.addItemOutput(<mysticalagriculture:stone_seeds>);
crop99.setChance(0.50);
crop99.build();

val crop100 = mods.modularmachinery.RecipeBuilder.newBuilder("crop100", "mystical_farm", 10000);
crop100.addEnergyPerTickInput(100);
crop100.addFluidInput(<liquid:water>*500);
crop100.addItemInput(<mysticalagriculture:dirt_seeds>);
crop100.addItemOutput(<mysticalagriculture:dirt_seeds>);
crop100.addItemOutput(<mysticalagriculture:dirt_essence>*4);
crop100.addItemOutput(<mysticalagriculture:dirt_essence>);
crop100.setChance(0.50);
crop100.addItemOutput(<mysticalagriculture:dirt_essence>);
crop100.setChance(0.26);
crop100.addItemOutput(<mysticalagriculture:dirt_seeds>);
crop100.setChance(0.50);
crop100.build();

val crop101 = mods.modularmachinery.RecipeBuilder.newBuilder("crop101", "mystical_farm", 10000);
crop101.addEnergyPerTickInput(100);
crop101.addFluidInput(<liquid:water>*500);
crop101.addItemInput(<mysticalagriculture:nature_seeds>);
crop101.addItemOutput(<mysticalagriculture:nature_seeds>);
crop101.addItemOutput(<mysticalagriculture:nature_essence>*4);
crop101.addItemOutput(<mysticalagriculture:nature_essence>);
crop101.setChance(0.50);
crop101.addItemOutput(<mysticalagriculture:nature_essence>);
crop101.setChance(0.26);
crop101.addItemOutput(<mysticalagriculture:nature_seeds>);
crop101.setChance(0.50);
crop101.build();

val crop102 = mods.modularmachinery.RecipeBuilder.newBuilder("crop102", "mystical_farm", 10000);
crop102.addEnergyPerTickInput(100);
crop102.addFluidInput(<liquid:water>*500);
crop102.addItemInput(<mysticalagriculture:tier1_inferium_seeds>);
crop102.addItemOutput(<mysticalagriculture:tier1_inferium_seeds>);
crop102.addItemOutput(<mysticalagriculture:crafting>);
crop102.addItemOutput(<mysticalagriculture:crafting>);
crop102.setChance(0.50);
crop102.addItemOutput(<mysticalagriculture:crafting>);
crop102.setChance(0.26);
crop102.addItemOutput(<mysticalagriculture:tier1_inferium_seeds>);
crop102.setChance(0.50);
crop102.build();

val crop103 = mods.modularmachinery.RecipeBuilder.newBuilder("crop103", "mystical_farm", 10000);
crop103.addEnergyPerTickInput(100);
crop103.addFluidInput(<liquid:water>*500);
crop103.addItemInput(<mysticalagriculture:tier2_inferium_seeds>);
crop103.addItemOutput(<mysticalagriculture:tier2_inferium_seeds>);
crop103.addItemOutput(<mysticalagriculture:crafting>*2);
crop103.addItemOutput(<mysticalagriculture:crafting>);
crop103.setChance(0.50);
crop103.addItemOutput(<mysticalagriculture:crafting>);
crop103.setChance(0.26);
crop103.addItemOutput(<mysticalagriculture:tier2_inferium_seeds>);
crop103.setChance(0.50);
crop103.build();

val crop104 = mods.modularmachinery.RecipeBuilder.newBuilder("crop104", "mystical_farm", 10000);
crop104.addEnergyPerTickInput(100);
crop104.addFluidInput(<liquid:water>*500);
crop104.addItemInput(<mysticalagriculture:tier3_inferium_seeds>);
crop104.addItemOutput(<mysticalagriculture:tier3_inferium_seeds>);
crop104.addItemOutput(<mysticalagriculture:crafting>*4);
crop104.addItemOutput(<mysticalagriculture:crafting>);
crop104.setChance(0.50);
crop104.addItemOutput(<mysticalagriculture:crafting>);
crop104.setChance(0.26);
crop104.addItemOutput(<mysticalagriculture:tier3_inferium_seeds>);
crop104.setChance(0.50);
crop104.build();

val crop105 = mods.modularmachinery.RecipeBuilder.newBuilder("crop105", "mystical_farm", 10000);
crop105.addEnergyPerTickInput(100);
crop105.addFluidInput(<liquid:water>*500);
crop105.addItemInput(<mysticalagriculture:tier4_inferium_seeds>);
crop105.addItemOutput(<mysticalagriculture:tier4_inferium_seeds>);
crop105.addItemOutput(<mysticalagriculture:crafting>*6);
crop105.addItemOutput(<mysticalagriculture:crafting>);
crop105.setChance(0.50);
crop105.addItemOutput(<mysticalagriculture:crafting>);
crop105.setChance(0.26);
crop105.addItemOutput(<mysticalagriculture:tier4_inferium_seeds>);
crop105.setChance(0.50);
crop105.build();

val crop106 = mods.modularmachinery.RecipeBuilder.newBuilder("crop106", "mystical_farm", 10000);
crop106.addEnergyPerTickInput(100);
crop106.addFluidInput(<liquid:water>*500);
crop106.addItemInput(<mysticalagriculture:tier5_inferium_seeds>);
crop106.addItemOutput(<mysticalagriculture:tier5_inferium_seeds>);
crop106.addItemOutput(<mysticalagriculture:crafting>*8);
crop106.addItemOutput(<mysticalagriculture:crafting>);
crop106.setChance(0.50);
crop106.addItemOutput(<mysticalagriculture:crafting>);
crop106.setChance(0.26);
crop106.addItemOutput(<mysticalagriculture:tier5_inferium_seeds>);
crop106.setChance(0.50);
crop106.build();

val crop107 = mods.modularmachinery.RecipeBuilder.newBuilder("crop107", "mystical_farm", 10000);
crop107.addEnergyPerTickInput(100);
crop107.addFluidInput(<liquid:water>*500);
crop107.addItemInput(<mysticalagradditions:tier6_inferium_seeds>);
crop107.addItemOutput(<mysticalagradditions:tier6_inferium_seeds>);
crop107.addItemOutput(<mysticalagriculture:crafting>*10);
crop107.addItemOutput(<mysticalagriculture:crafting>);
crop107.setChance(0.50);
crop107.addItemOutput(<mysticalagriculture:crafting>);
crop107.setChance(0.26);
crop107.addItemOutput(<mysticalagradditions:tier6_inferium_seeds>);
crop107.setChance(0.50);
crop107.build();
